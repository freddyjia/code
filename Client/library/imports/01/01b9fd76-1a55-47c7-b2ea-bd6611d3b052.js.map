{"version":3,"sources":["assets\\Scripts\\Modules\\Models\\ModelApp.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Model from \"../../MVCFramework/Model\";\r\nimport TCPNetwork, { TCPSessionID } from \"../../Network/Socket/TCPNetwork\";\r\nimport MessageNames from \"../MessageNames\";\r\nimport Toast from \"../../Tools/Toast\";\r\nimport TimerManager from \"../../Components/TimerManager\";\r\nimport { PingReq } from \"../../Protos/Ping\";\r\nimport { PingMsgDefine } from \"../../Protos/MessageDefine\";\r\nimport Language from \"../../Global/Language\";\r\nimport { BankProxyInfo, LoginReq, LoginRes, ProxyInfoReq, ProxyInfoRsp, SubmitDepositReq, SubmitDepositRsp, SubmitOrderReq, SubmitOrderRsp } from \"../../Protos/BankProxy\";\r\nimport { BankProxyMsgDefine } from \"../../Protos/MessageDefine_BankProxy\";\r\n\r\nexport default class ModelChat extends Model {\r\n    private date = new Date();\r\n    private pingTimer;\r\n    private lastSendPingTime;\r\n    private selfPlayerId: string;\r\n    private ProxyId: string;\r\n    private CurrentBanktype: number;\r\n    private OrderNo: string;\r\n\r\n    public Init() {\r\n    }\r\n\r\n    public Clean() {\r\n    }\r\n\r\n    public SetSelfPlayerID(playerId) {\r\n        this.selfPlayerId = playerId;\r\n    }\r\n    public SetbankProxyId(proxyId) {\r\n        this.ProxyId = proxyId;\r\n    }\r\n    public SetBankType(banktype) {\r\n        this.CurrentBanktype = banktype;\r\n    }\r\n    public GetBankType(): number {\r\n        return this.CurrentBanktype;\r\n    }\r\n    public SetOrderNo(orderNo) {\r\n        this.OrderNo = orderNo;\r\n    }\r\n    public GetOrderNoe(): string {\r\n        return this.OrderNo;\r\n    }\r\n\r\n\r\n    // 连接和登录\r\n    public StartLogin() {\r\n        TCPNetwork.GetInstance().Connect(TCPSessionID.Hall, window[\"ip\"], window[\"port\"],\r\n            () => {\r\n                cc.log(\"连接服务器成功\");\r\n\r\n                this.InitPing();\r\n\r\n                // 链接成功，开始尝试登录\r\n                let req = LoginReq.create();\r\n                req.playerId = this.selfPlayerId;\r\n                let reqData = LoginReq.encode(req).finish();\r\n                TCPNetwork.GetInstance().Send(\r\n                    TCPSessionID.Hall,\r\n                    BankProxyMsgDefine.MSG_BankProxy_Login,\r\n                    reqData,\r\n                    (data) => {\r\n                        let resData = LoginRes.decode(data);\r\n                        if (resData.success) {\r\n                            cc.log(\"登录服务器成功\");\r\n                            this.SendMessage(MessageNames.ShowAppStartView);\r\n                        }\r\n                        else {\r\n                            cc.log(\"连接服务器失败:\", resData.tips);\r\n                            Toast.Show(resData.tips);\r\n                        }\r\n                    },\r\n                    () => {\r\n\r\n                    }\r\n                );\r\n            },\r\n            () => {\r\n                Toast.Show(Language.text4);\r\n            });\r\n\r\n    }\r\n    ///请求代理信息\r\n    public ReqProxyInfo() {\r\n        TCPNetwork.GetInstance().Connect(TCPSessionID.Hall, window[\"ip\"], window[\"port\"],\r\n            () => {\r\n                cc.log(\"连接服务器成功\");\r\n\r\n                this.InitPing();\r\n\r\n                // 链接成功，开始尝试登录\r\n                let req = ProxyInfoReq.create();\r\n                req.bankProxyId = this.ProxyId;\r\n                let reqData = ProxyInfoReq.encode(req).finish();\r\n                TCPNetwork.GetInstance().Send(\r\n                    TCPSessionID.Hall,\r\n                    BankProxyMsgDefine.MSG_BankProxy_ProxyInfoReq,\r\n                    reqData,\r\n                    (data) => {\r\n                        let resData = ProxyInfoRsp.decode(data);\r\n                        this.SendMessage(MessageNames.ShowProxyInfo);\r\n                    },\r\n                    () => {\r\n\r\n                    }\r\n                );\r\n            },\r\n            () => {\r\n                Toast.Show(Language.text4);\r\n            });\r\n    }\r\n    //\tMSG_BankProxy_SubmitDepositReq \t= 15103;\t\t//提交存入数额\r\n    public ReqSubmitDeposit(banktype: number, amount: number) {\r\n        cc.log(\"提交存入数额\")\r\n        TCPNetwork.GetInstance().Connect(TCPSessionID.Hall, window[\"ip\"], window[\"port\"],\r\n            () => {\r\n                cc.log(\"连接服务器成功\");\r\n\r\n                this.InitPing();\r\n\r\n                // 链接成功，开始尝试登录\r\n                let req = SubmitDepositReq.create();\r\n                req.bankProxyId = this.ProxyId;\r\n                req.playerId = this.selfPlayerId;\r\n                req.bankType = banktype;\r\n                req.depositAmount = amount;\r\n                let reqData = SubmitDepositReq.encode(req).finish();\r\n                TCPNetwork.GetInstance().Send(\r\n                    TCPSessionID.Hall,\r\n                    BankProxyMsgDefine.MSG_BankProxy_SubmitDepositReq,\r\n                    reqData,\r\n                    (data) => {\r\n                        let resData = SubmitDepositRsp.decode(data);\r\n                        this.SendMessage(MessageNames.SubmitDeposit);\r\n                    },\r\n                    () => {\r\n\r\n                    }\r\n                );\r\n            },\r\n            () => {\r\n                Toast.Show(Language.text4);\r\n            });\r\n    }\r\n    //desc:备注信息\r\n    public ReqSubmitOrder(orderNo: string, imageData: string, desc: string) {\r\n        TCPNetwork.GetInstance().Connect(TCPSessionID.Hall, window[\"ip\"], window[\"port\"],\r\n            () => {\r\n                cc.log(\"连接服务器成功\");\r\n\r\n                this.InitPing();\r\n\r\n                // 链接成功，开始尝试登录\r\n                let req = SubmitOrderReq.create();\r\n                req.orderNo = orderNo;\r\n                req.imageData = imageData;\r\n                req.desc = desc;\r\n\r\n                let reqData = SubmitOrderReq.encode(req).finish();\r\n                TCPNetwork.GetInstance().Send(\r\n                    TCPSessionID.Hall,\r\n                    BankProxyMsgDefine.MSG_BankProxy_SubmitOrderReq,\r\n                    reqData,\r\n                    (data) => {\r\n                        let resData = SubmitOrderRsp.decode(data);\r\n                        if (resData.success) {\r\n                            cc.log(\"提交成功\");\r\n                            this.SendMessage(MessageNames.SubmitOrder);\r\n                        }\r\n                        else {\r\n                            cc.log(\"提交失败:\", resData.tips);\r\n                            Toast.Show(resData.tips);\r\n                        }\r\n                    },\r\n                    () => {\r\n\r\n                    }\r\n                );\r\n            },\r\n            () => {\r\n                Toast.Show(Language.text4);\r\n            });\r\n    }\r\n\r\n    public InitPing() {\r\n        TimerManager.GetInstance().DeleteTimer(this.pingTimer);\r\n\r\n        this.lastSendPingTime = Date.now();\r\n\r\n        this.pingTimer = TimerManager.GetInstance().CallActionDelay(() => {\r\n            let timeNow = Date.now()\r\n            if (timeNow - this.lastSendPingTime > 3000) {\r\n                this.SendPing(() => {\r\n                    // this.ResetPingChecker();\r\n                });\r\n                this.lastSendPingTime = timeNow;\r\n            }\r\n\r\n        }, 5, null, -1, 5, true);\r\n    }\r\n\r\n    private SendPing(funcSuccess) {\r\n        let req = PingReq.create();\r\n        req.timestamp = this.date.getDate();\r\n        let senddata = PingReq.encode(req).finish();\r\n        TCPNetwork.GetInstance().Send(TCPSessionID.Hall, PingMsgDefine.MSG_PING, senddata, (data) => {\r\n            funcSuccess();\r\n        }, (errmsg) => {\r\n\r\n        }, true);\r\n\r\n    }\r\n}"]}