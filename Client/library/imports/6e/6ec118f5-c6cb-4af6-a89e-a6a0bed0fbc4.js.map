{"version":3,"sources":["assets\\Scripts\\Tools\\XTween\\Base\\XTweenerGroup.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import XTweenerIF from \"./XTweenerIF\";\nimport { XTweenerState } from \"./XTweenGlobal\";\nimport XTweenUpdater from \"./XTweenUpdater\";\nimport XTweenerGroupQueueItem from \"./XTweenerGroupQueueItem\";\nimport Util from \"../../Util\";\nimport XTweenObserver from \"./XTweenObserver\";\n\nexport default class XTweenerGroup implements XTweenerIF\n{\n    private data:any;\n    private delay:number = 0;\n    private state:XTweenerState = XTweenerState.BeforePlay;\n    private controlByParent:boolean = false;\n    private startCallback:()=>void;\n    private finishCallback:()=>void;\n    private listQueueItems:Array<XTweenerGroupQueueItem> = [];\n    private observer:XTweenObserver;\n    private speed = 1;\n    private shouldCallback:boolean = true;\n\n    public SetTweenerData(data)\n    {\n        this.data = data;\n    }\n    public GetTweenerData()\n    {\n        return this.data;\n    }\n    public SetDelay(delay:number)\n    {\n        this.delay = delay;\n    }\n    public GetDelay()\n    {\n        return this.delay;\n    }\n    public Play()\n    {\n        if(this.state == XTweenerState.BeforePlay)\n        {\n            if(this.startCallback != null)\n            {\n                this.startCallback();\n            }\n        }\n        this.state = XTweenerState.Playing;\n        if(this.controlByParent == false)\n        {\n            XTweenUpdater.GetInstance().AddTweener(this);\n        }\n    }\n    \n    public Finish(shouldCallback:boolean=true)\n    {\n        this.state = XTweenerState.End;\n        this.shouldCallback = shouldCallback;\n    }\n    public Pause()\n    {\n        if(this.state == XTweenerState.Playing)\n        {\n            this.state = XTweenerState.Pause;\n        }\n    }\n    public Resume()\n    {\n        if(this.state == XTweenerState.Pause)\n        {\n            this.state = XTweenerState.Playing;\n        }\n    }\n    public SetSpeed(speed:number)\n    {\n        this.speed = speed;\n    }\n    public SetStartCallback(startCallback:()=>void)\n    {\n        this.startCallback = startCallback;\n    }\n    public SetFinishCallback(finishCallback:()=>void)\n    {\n        this.finishCallback = finishCallback;\n    }\n    public GetState():XTweenerState\n    {\n        return this.state;\n    }\n    public SetControlByParent()\n    {\n        this.controlByParent = true;\n    }\n    public Update(deltaTime:number)\n    {\n        if(this.state == XTweenerState.End)\n            return;\n        if(this.listQueueItems.length > 0)\n        {\n            this.listQueueItems[0].Update(deltaTime);\n            if(this.listQueueItems[0].CheckFinish() == true)\n            {\n                Util.RemoveArray(this.listQueueItems,0);\n            }\n        }\n\n        if(this.listQueueItems.length == 0)\n        {\n            this.state = XTweenerState.End;\n        }\n        if(this.state == XTweenerState.End)\n        {\n            if(this.observer != null)\n            {\n                this.observer.RemoveTweener(this);\n            }\n\n            if(this.finishCallback != null && this.shouldCallback == true)\n            {\n                this.finishCallback();\n            }\n        }\n    }\n    public GetTypeMark():string\n    {\n        return \"XTweenerGroup\";\n    }\n    public GetControlByParent():boolean\n    {\n        return this.controlByParent;\n    }\n\n    public AddTweener(tweener:XTweenerIF, addMode:XTweenerGroupAddMode)\n    {\n        tweener.SetControlByParent();\n        let queueItem = null;\n        if(addMode == XTweenerGroupAddMode.Queue || this.listQueueItems.length == 0)\n        {\n            queueItem = new XTweenerGroupQueueItem();\n            this.listQueueItems.push(queueItem);\n        }\n        else\n        {\n            queueItem = this.listQueueItems[this.listQueueItems.length - 1];\n        }\n        queueItem.AddTweener(tweener);\n    }\n\n    public BeReplaced()\n    {\n        //do nothing\n    }\n    public OnEnable()\n    {\n        //do nothing\n    }\n    public OnDisable()\n    {\n        //终止整个tween\n        this.state = XTweenerState.End;\n        this.observer.RemoveTweener(this);\n    }\n    public OnDestroy()\n    {\n        //终止整个tween\n        this.state = XTweenerState.End;\n        this.observer.RemoveTweener(this);\n    }\n\n    /**\n     * 增加ObserverObj后，如果ObserverObj active改变成false，就会停止后续的回调\n     * @param target \n     */\n    public AddObserverObj(target:cc.Node)\n    {\n        this.observer = target.getComponent(XTweenObserver);\n        if(this.observer == null)\n        {\n            this.observer = target.addComponent(XTweenObserver);\n        }\n        this.observer.AddXTweener(this);\n    }\n}\n\nexport class XTweenerGroupAddMode\n{\n    public static Queue = 1;\n    public static Parallel = 2;\n}"]}