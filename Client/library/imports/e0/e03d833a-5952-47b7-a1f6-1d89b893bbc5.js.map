{"version":3,"sources":["assets\\Scripts\\Network\\Http\\HttpRequest.ts"],"names":[],"mappings":";;;;;;AACA,8CAAyC;AAEzC;IAAA;IA+DA,CAAC;IA7DiB,eAAG,GAAjB,UAAkB,GAAU,EAAC,eAA8B,EAAC,YAA2B,EAAC,OAAc;QAElG,IAAI,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;QAC/B,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC;QAEtB,GAAG,CAAC,kBAAkB,GAAG;YACrB,iDAAiD;YACjD,IAAI,GAAG,CAAC,UAAU,IAAI,CAAC,EACvB;gBACI,IAAG,GAAG,CAAC,MAAM,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,GAAG,GAAG,EACxC;oBACI,IAAI,QAAQ,GAAG,GAAG,CAAC,YAAY,CAAC;oBAChC,eAAe,CAAC,QAAQ,CAAC,CAAC;iBAC7B;qBAED;oBACI,YAAY,CAAC,YAAY,GAAE,GAAG,CAAC,MAAM,GAAG,YAAY,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC;iBAC1E;aACJ;YACD,+BAA+B;YAC/B,IAAI;YACJ,+DAA+D;YAC/D,IAAI;QACR,CAAC,CAAC;QACF,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QAC3B,GAAG,CAAC,IAAI,EAAE,CAAC;IACf,CAAC;IAEa,gBAAI,GAAlB,UAAmB,GAAU,EAAC,QAA4B,EAAC,eAA8B,EAAC,YAA2B,EAAC,OAAoB,EAAC,WAAmB;QAAxC,wBAAA,EAAA,eAAoB;QAEtI,IAAG,gBAAM,CAAC,OAAO,IAAI,IAAI;YACrB,EAAE,CAAC,KAAK,CAAC,uBAAuB,GAAG,GAAG,CAAC,CAAC;QAC5C,IAAI,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;QAE/B,GAAG,CAAC,kBAAkB,GAAG;YACrB,sDAAsD;YACtD,IAAI,GAAG,CAAC,UAAU,IAAI,CAAC,EACvB;gBACI,IAAG,GAAG,CAAC,MAAM,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,GAAG,GAAG,EACxC;oBACI,IAAI,QAAQ,GAAG,GAAG,CAAC,YAAY,CAAC;oBAChC,eAAe,CAAC,QAAQ,CAAC,CAAC;iBAC7B;qBAED;oBACI,EAAE,CAAC,KAAK,CAAC,YAAY,GAAE,GAAG,CAAC,MAAM,GAAG,YAAY,GAAG,GAAG,CAAC,UAAU,GAAG,oBAAoB,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC;oBAC7G,YAAY,CAAC,QAAQ,CAAC,CAAC;iBAC1B;aACJ;QACL,CAAC,CAAC;QACF,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QAC5B,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC;QACtB,GAAG,CAAC,gBAAgB,CAAC,cAAc,EAAC,WAAW,IAAI,IAAI,CAAC,CAAC,CAAC,mCAAmC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;QAE7G,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QACxC,oCAAoC;QAEpC,kDAAkD;QAClD,mBAAmB;QACnB,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACvB,CAAC;IACL,kBAAC;AAAD,CA/DA,AA+DC,IAAA","file":"","sourceRoot":"/","sourcesContent":["import ccC from \"../../Tools/ccC\";\nimport Global from \"../../Global/Global\";\n\nexport default class HttpRequest\n{\n    public static Get(url:string,successCallback:(string)=>void,failCallback:(string)=>void,timeout:number)\n    {\n        var xhr = new XMLHttpRequest();\n        xhr.timeout = timeout;\n        \n        xhr.onreadystatechange = function () {\n            // cc.error(\"xhr.readyState  \" + xhr.readyState);\n            if (xhr.readyState == 4) \n            {\n                if(xhr.status >= 200 && xhr.status < 400)\n                {\n                    var response = xhr.responseText;\n                    successCallback(response);\n                }\n                else\n                {\n                    failCallback(\"err code: \"+ xhr.status + \" err msg: \" + xhr.statusText);\n                }\n            }\n            // else if(xhr.readyState == 1)\n            // {\n            //     xhr.setRequestHeader(\"Access-Control-Allow-Origin\",\"*\");\n            // }\n        };\n        xhr.open(\"GET\", url, true);\n        xhr.send();\n    }\n\n    public static Post(url:string,postParm:{[name:string]:any},successCallback:(string)=>void,failCallback:(string)=>void,timeout:number=10000,contentType?:string)\n    {\n        if(Global.showLog == true)\n            cc.error(\"HttpRequest Post url \" + url);\n        var xhr = new XMLHttpRequest();\n        \n        xhr.onreadystatechange = function () {\n            // cc.error(\"Post xhr.readyState  \" + xhr.readyState);\n            if (xhr.readyState == 4) \n            {\n                if(xhr.status >= 200 && xhr.status < 400)\n                {\n                    var response = xhr.responseText;\n                    successCallback(response);\n                }\n                else\n                {\n                    cc.error(\"err code: \"+ xhr.status + \" err msg: \" + xhr.statusText + \" xhr.responseText \" + xhr.responseText);\n                    failCallback(\"网络请求错误\");\n                }\n            }\n        };\n        xhr.open(\"POST\", url, true);\n        xhr.timeout = timeout;\n        xhr.setRequestHeader(\"Content-Type\",contentType == null ? \"application/x-www-form-urlencoded\" : contentType);\n        \n        let jsongStr = JSON.stringify(postParm);\n        // cc.error(\"jsongStr \" + jsongStr);\n\n        // let bytes = new TextEncoder().encode(jsongStr);\n        // xhr.send(bytes);\n        xhr.send(jsongStr);\n    }\n}\n"]}