{"version":3,"sources":["assets\\Scripts\\Tools\\MD5.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["export default class MD5 {\n    \n    public constructor() {\n\n    }\n    private hexcase = 0;   /* hex output format. 0 - lowercase; 1 - uppercase        */\n    private b64pad = \"\";  /* base-64 pad character. \"=\" for strict RFC compliance   */\n\n    /*\n    * These are the privates you'll usually want to call\n    * They take string arguments and return either hex or base-64 encoded strings\n    */\n    public hex_md5(s) { return this.rstr2hex(this.rstr_md5(this.str2rstr_utf8(s))); }//这个函数就行了，\n    public b64_md5(s) { return this.rstr2b64(this.rstr_md5(this.str2rstr_utf8(s))); }\n    public any_md5(s,e) { return this.rstr2any(this.rstr_md5(this.str2rstr_utf8(s)),e); }\n    public hex_hmac_md5(k,d)\n    { return this.rstr2hex(this.rstr_hmac_md5(this.str2rstr_utf8(k),this.str2rstr_utf8(d))); }\n    private b64_hmac_md5(k,d)\n    { return this.rstr2b64(this.rstr_hmac_md5(this.str2rstr_utf8(k),this.str2rstr_utf8(d))); }\n    private any_hmac_md5(k,d,e)\n    { return this.rstr2any(this.rstr_hmac_md5(this.str2rstr_utf8(k),this.str2rstr_utf8(d)),e); }\n\n    /*\n    * Perform a simple self-test to see if the VM is working\n    */\n    public md5_vm_test() {\n        return this.hex_md5(\"abc\").toLowerCase() == \"900150983cd24fb0d6963f7d28e17f72\";\n    }\n\n    /*\n    * Calculate the MD5 of a raw string\n    */\n    public rstr_md5(s) {  \n         \n        return this.binl2rstr(this.binl_md5(this.rstr2binl(s),s.length * 8));\n    }\n\n    /*\n    * Calculate the HMAC-MD5, of a key and some data (raw strings)\n    */\n    public rstr_hmac_md5(key,data) {\n        var bkey = this.rstr2binl(key);\n        if(bkey.length > 16) bkey = this.binl_md5(bkey,key.length * 8);\n\n        var ipad = Array(16),opad = Array(16);\n        for(var i = 0;i < 16;i++) {\n            ipad[i] = bkey[i] ^ 0x36363636;\n            opad[i] = bkey[i] ^ 0x5C5C5C5C;\n        }\n        \n        var hash = this.binl_md5(ipad.concat(this.rstr2binl(data)),512 + data.length * 8);\n        return this.binl2rstr(this.binl_md5(opad.concat(hash),512 + 128));\n    }\n\n    /*\n    * Convert a raw string to a hex string\n    */\n    public rstr2hex(input) {\n        try { this.hexcase } catch(e) { this.hexcase = 0; }\n        var hex_tab = this.hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n        var output = \"\";\n        var x;\n        for(var i = 0;i < input.length;i++) {\n            x = input.charCodeAt(i);\n            output += hex_tab.charAt((x >>> 4) & 0x0F)\n                + hex_tab.charAt(x & 0x0F);\n        }\n        return output;\n    }\n\n    /*\n    * Convert a raw string to a base-64 string\n    */\n    public rstr2b64(input) {\n        try { this.b64pad } catch(e) { this.b64pad = ''; }\n        var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n        var output = \"\";\n        var len = input.length;\n        for(var i = 0;i < len;i += 3) {\n            var triplet = (input.charCodeAt(i) << 16)\n                | (i + 1 < len ? input.charCodeAt(i + 1) << 8 : 0)\n                | (i + 2 < len ? input.charCodeAt(i + 2) : 0);\n            for(var j = 0;j < 4;j++) {\n                if(i * 8 + j * 6 > input.length * 8) output += this.b64pad;\n                else output += tab.charAt((triplet >>> 6 * (3 - j)) & 0x3F);\n            }\n        }\n        return output;\n    }\n\n    /*\n    * Convert a raw string to an arbitrary string encoding\n    */\n    public rstr2any(input,encoding) {\n        var divisor = encoding.length;\n        var i,j,q,x,quotient;\n\n        /* Convert to an array of 16-bit big-endian values, forming the dividend */\n        var dividend = Array(Math.ceil(input.length / 2));\n        for(i = 0;i < dividend.length;i++) {\n            dividend[i] = (input.charCodeAt(i * 2) << 8) | input.charCodeAt(i * 2 + 1);\n        }\n\n        /*\n        * Repeatedly perform a long division. The binary array forms the dividend,\n        * the length of the encoding is the divisor. Once computed, the quotient\n        * forms the dividend for the next step. All remainders are stored for later\n        * use.\n        */\n        var full_length = Math.ceil(input.length * 8 /\n            (Math.log(encoding.length) / Math.log(2)));\n        var remainders = Array(full_length);\n        for(j = 0;j < full_length;j++) {\n            quotient = Array();\n            x = 0;\n            for(i = 0;i < dividend.length;i++) {\n                x = (x << 16) + dividend[i];\n                q = Math.floor(x / divisor);\n                x -= q * divisor;\n                if(quotient.length > 0 || q > 0)\n                    quotient[quotient.length] = q;\n            }\n            remainders[j] = x;\n            dividend = quotient;\n        }\n\n        /* Convert the remainders to the output string */\n        var output = \"\";\n        for(i = remainders.length - 1;i >= 0;i--)\n            output += encoding.charAt(remainders[i]);\n\n        return output;\n    }\n\n    /*\n    * Encode a string as utf-8.\n    * For efficiency, this assumes the input is valid utf-16.\n    */\n    public str2rstr_utf8(input) {\n        var output = \"\";\n        var i = -1;\n        var x,y;\n\n        while(++i < input.length) {\n            /* Decode utf-16 surrogate pairs */\n            x = input.charCodeAt(i);\n            y = i + 1 < input.length ? input.charCodeAt(i + 1) : 0;\n            if(0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF) {\n                x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);\n                i++;\n            }\n\n            /* Encode output as utf-8 */\n            if(x <= 0x7F)\n                output += String.fromCharCode(x);\n            else if(x <= 0x7FF)\n                output += String.fromCharCode(0xC0 | ((x >>> 6) & 0x1F),\n                    0x80 | (x & 0x3F));\n            else if(x <= 0xFFFF)\n                output += String.fromCharCode(0xE0 | ((x >>> 12) & 0x0F),\n                    0x80 | ((x >>> 6) & 0x3F),\n                    0x80 | (x & 0x3F));\n            else if(x <= 0x1FFFFF)\n                output += String.fromCharCode(0xF0 | ((x >>> 18) & 0x07),\n                    0x80 | ((x >>> 12) & 0x3F),\n                    0x80 | ((x >>> 6) & 0x3F),\n                    0x80 | (x & 0x3F));\n        }\n        return output;\n    }\n\n    /*\n    * Encode a string as utf-16\n    */\n    public str2rstr_utf16le(input) {\n        var output = \"\";\n        for(var i = 0;i < input.length;i++)\n            output += String.fromCharCode(input.charCodeAt(i) & 0xFF,\n                (input.charCodeAt(i) >>> 8) & 0xFF);\n        return output;\n    }\n\n    public str2rstr_utf16be(input) {\n        var output = \"\";\n        for(var i = 0;i < input.length;i++)\n            output += String.fromCharCode((input.charCodeAt(i) >>> 8) & 0xFF,\n                input.charCodeAt(i) & 0xFF);\n        return output;\n    }\n\n    /*\n    * Convert a raw string to an array of little-endian words\n    * Characters >255 have their high-byte silently ignored.\n    */\n    public rstr2binl(input) {\n        var output = Array(input.length >> 2);\n        for(var i = 0;i < output.length;i++)\n            output[i] = 0;\n        for(var i = 0;i < input.length * 8;i += 8)\n            output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (i % 32);\n        return output;\n    }\n\n    /*\n    * Convert an array of little-endian words to a string\n    */\n    public binl2rstr(input) {\n        var output = \"\";\n        for(var i = 0;i < input.length * 32;i += 8)\n            output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xFF);\n        return output;\n    }\n\n    /*\n    * Calculate the MD5 of an array of little-endian words, and a bit length.\n    */\n    public binl_md5(x,len) {\n        /* append padding */\n        x[len >> 5] |= 0x80 << ((len) % 32);\n        x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n        var a = 1732584193;\n        var b = -271733879;\n        var c = -1732584194;\n        var d = 271733878;\n\n        for(var i = 0;i < x.length;i += 16) {\n            var olda = a;\n            var oldb = b;\n            var oldc = c;\n            var oldd = d;\n\n            a = this.md5_ff(a,b,c,d,x[i + 0],7,-680876936);\n            d = this.md5_ff(d,a,b,c,x[i + 1],12,-389564586);\n            c = this.md5_ff(c,d,a,b,x[i + 2],17,606105819);\n            b = this.md5_ff(b,c,d,a,x[i + 3],22,-1044525330);\n            a = this.md5_ff(a,b,c,d,x[i + 4],7,-176418897);\n            d = this.md5_ff(d,a,b,c,x[i + 5],12,1200080426);\n            c = this.md5_ff(c,d,a,b,x[i + 6],17,-1473231341);\n            b = this.md5_ff(b,c,d,a,x[i + 7],22,-45705983);\n            a = this.md5_ff(a,b,c,d,x[i + 8],7,1770035416);\n            d = this.md5_ff(d,a,b,c,x[i + 9],12,-1958414417);\n            c = this.md5_ff(c,d,a,b,x[i + 10],17,-42063);\n            b = this.md5_ff(b,c,d,a,x[i + 11],22,-1990404162);\n            a = this.md5_ff(a,b,c,d,x[i + 12],7,1804603682);\n            d = this.md5_ff(d,a,b,c,x[i + 13],12,-40341101);\n            c = this.md5_ff(c,d,a,b,x[i + 14],17,-1502002290);\n            b = this.md5_ff(b,c,d,a,x[i + 15],22,1236535329);\n\n            a = this.md5_gg(a,b,c,d,x[i + 1],5,-165796510);\n            d = this.md5_gg(d,a,b,c,x[i + 6],9,-1069501632);\n            c = this.md5_gg(c,d,a,b,x[i + 11],14,643717713);\n            b = this.md5_gg(b,c,d,a,x[i + 0],20,-373897302);\n            a = this.md5_gg(a,b,c,d,x[i + 5],5,-701558691);\n            d = this.md5_gg(d,a,b,c,x[i + 10],9,38016083);\n            c = this.md5_gg(c,d,a,b,x[i + 15],14,-660478335);\n            b = this.md5_gg(b,c,d,a,x[i + 4],20,-405537848);\n            a = this.md5_gg(a,b,c,d,x[i + 9],5,568446438);\n            d = this.md5_gg(d,a,b,c,x[i + 14],9,-1019803690);\n            c = this.md5_gg(c,d,a,b,x[i + 3],14,-187363961);\n            b = this.md5_gg(b,c,d,a,x[i + 8],20,1163531501);\n            a = this.md5_gg(a,b,c,d,x[i + 13],5,-1444681467);\n            d = this.md5_gg(d,a,b,c,x[i + 2],9,-51403784);\n            c = this.md5_gg(c,d,a,b,x[i + 7],14,1735328473);\n            b = this.md5_gg(b,c,d,a,x[i + 12],20,-1926607734);\n\n            a = this.md5_hh(a,b,c,d,x[i + 5],4,-378558);\n            d = this.md5_hh(d,a,b,c,x[i + 8],11,-2022574463);\n            c = this.md5_hh(c,d,a,b,x[i + 11],16,1839030562);\n            b = this.md5_hh(b,c,d,a,x[i + 14],23,-35309556);\n            a = this.md5_hh(a,b,c,d,x[i + 1],4,-1530992060);\n            d = this.md5_hh(d,a,b,c,x[i + 4],11,1272893353);\n            c = this.md5_hh(c,d,a,b,x[i + 7],16,-155497632);\n            b = this.md5_hh(b,c,d,a,x[i + 10],23,-1094730640);\n            a = this.md5_hh(a,b,c,d,x[i + 13],4,681279174);\n            d = this.md5_hh(d,a,b,c,x[i + 0],11,-358537222);\n            c = this.md5_hh(c,d,a,b,x[i + 3],16,-722521979);\n            b = this.md5_hh(b,c,d,a,x[i + 6],23,76029189);\n            a = this.md5_hh(a,b,c,d,x[i + 9],4,-640364487);\n            d = this.md5_hh(d,a,b,c,x[i + 12],11,-421815835);\n            c = this.md5_hh(c,d,a,b,x[i + 15],16,530742520);\n            b = this.md5_hh(b,c,d,a,x[i + 2],23,-995338651);\n\n            a = this.md5_ii(a,b,c,d,x[i + 0],6,-198630844);\n            d = this.md5_ii(d,a,b,c,x[i + 7],10,1126891415);\n            c = this.md5_ii(c,d,a,b,x[i + 14],15,-1416354905);\n            b = this.md5_ii(b,c,d,a,x[i + 5],21,-57434055);\n            a = this.md5_ii(a,b,c,d,x[i + 12],6,1700485571);\n            d = this.md5_ii(d,a,b,c,x[i + 3],10,-1894986606);\n            c = this.md5_ii(c,d,a,b,x[i + 10],15,-1051523);\n            b = this.md5_ii(b,c,d,a,x[i + 1],21,-2054922799);\n            a = this.md5_ii(a,b,c,d,x[i + 8],6,1873313359);\n            d = this.md5_ii(d,a,b,c,x[i + 15],10,-30611744);\n            c = this.md5_ii(c,d,a,b,x[i + 6],15,-1560198380);\n            b = this.md5_ii(b,c,d,a,x[i + 13],21,1309151649);\n            a = this.md5_ii(a,b,c,d,x[i + 4],6,-145523070);\n            d = this.md5_ii(d,a,b,c,x[i + 11],10,-1120210379);\n            c = this.md5_ii(c,d,a,b,x[i + 2],15,718787259);\n            b = this.md5_ii(b,c,d,a,x[i + 9],21,-343485551);\n\n            a = this.safe_add(a,olda);\n            b = this.safe_add(b,oldb);\n            c = this.safe_add(c,oldc);\n            d = this.safe_add(d,oldd);\n        }\n        return [a,b,c,d];\n    }\n\n    /*\n    * These privates implement the four basic operations the algorithm uses.\n    */\n    public md5_cmn(q,a,b,x,s,t) {\n        return this.safe_add(this.bit_rol(this.safe_add(this.safe_add(a,q),this.safe_add(x,t)),s),b);\n    }\n    public md5_ff(a,b,c,d,x,s,t) {\n        return this.md5_cmn((b & c) | ((~b) & d),a,b,x,s,t);\n    }\n    public md5_gg(a,b,c,d,x,s,t) {\n        return this.md5_cmn((b & d) | (c & (~d)),a,b,x,s,t);\n    }\n    public md5_hh(a,b,c,d,x,s,t) {\n        return this.md5_cmn(b ^ c ^ d,a,b,x,s,t);\n    }\n    public md5_ii(a,b,c,d,x,s,t) {\n        return this.md5_cmn(c ^ (b | (~d)),a,b,x,s,t);\n    }\n\n    /*\n    * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n    * to work around bugs in some JS interpreters.\n    */\n    public safe_add(x,y) {\n        var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n        var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n        return (msw << 16) | (lsw & 0xFFFF);\n    }\n\n    /*\n    * Bitwise rotate a 32-bit number to the left.\n    */\n    public bit_rol(num,cnt) {\n        return (num << cnt) | (num >>> (32 - cnt));\n    }\n\n}"]}