{"version":3,"sources":["assets\\Scripts\\Tools\\XTween\\XTween.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import XTweener from \"./Base/XTweener\";\nimport XTweenerPosition from \"./XTweenerPosition\";\n\nimport XTweenerRotaion from \"./XTweenerRotaion\";\nimport XTweenerColor from \"./XTweenerColor\";\n\nimport { XTweenCurvType } from \"./Base/XTweenCurv\";\nimport XTweenerScale from \"./XTweenerScale\";\nimport XTweenerGroup, { XTweenerGroupAddMode } from \"./Base/XTweenerGroup\";\nimport XTweenerValue from \"./XTweenerValue\";\nimport XTweenerValueArray from \"./XTweenerValueArray\";\nimport XTweenerAction from \"./XTweenerAction\";\nimport XTweenerWorldPosition from \"./XTweenerWorldPosition\";\n\nexport default class XTween \n{\n    /**\n     * 返回一个XTweener对象，可以放到group里或者手动调用play播放，不会自动播放\n     * @param target node对象\n     * @param startValue 可以传null\n     * @param endValue 必须有值\n     * @param duration 持续时间\n     * @param playTimes 播放次数，默认是1\n     * @param pingPong 默认false\n     * @param curv 默认Liner\n     * @param finishCallBack 默认为空\n     * @param delay 默认0\n     */\n    public static DoMove(\n        target:cc.Node,\n        startValue:cc.Vec2,\n        endValue:cc.Vec2,\n        duration:number,\n        playTimes:number=1,\n        pingPong:boolean=false,\n        curv=XTweenCurvType.Liner,\n        finishCallBack=null,\n        delay=0,\n        ):XTweener\n    {\n        let tweener = new XTweenerPosition();\n        tweener.Init(target,startValue,endValue,duration,playTimes,pingPong,curv);\n        tweener.SetFinishCallback(finishCallBack);\n        tweener.SetDelay(delay);\n        return tweener;\n    }\n\n    /**\n     * 返回一个XTweener对象，可以放到group里或者手动调用play播放，不会自动播放\n     * @param target node对象\n     * @param endPos 终点位置的node\n     * @param offset 终点位置的偏移值\n     * @param duration 持续时间\n     * @param playTimes 播放次数，默认是1\n     * @param pingPong 默认false\n     * @param curv 默认Liner\n     * @param finishCallBack 默认为空\n     * @param delay 默认0\n     */\n    public static DoMoveWorldPos(\n        target:cc.Node,\n        endPos:cc.Node|cc.Vec2,\n        offset:cc.Vec2,\n        duration:number,\n        playTimes:number=1,\n        pingPong:boolean=false,\n        curv=XTweenCurvType.Liner,\n        finishCallBack=null,\n        delay=0,\n        ):XTweener\n    {\n        let tweener = new XTweenerWorldPosition();\n        tweener.Init(target,endPos,offset,duration,playTimes,pingPong,curv);\n        tweener.SetFinishCallback(finishCallBack);\n        tweener.SetDelay(delay);\n        return tweener;\n    }\n\n    /**\n     * 返回一个XTweener对象，可以放到group里或者手动调用play播放，不会自动播放\n     * @param target node对象\n     * @param startValue 可以传null\n     * @param endValue 必须有值\n     * @param duration 持续时间\n     * @param playTimes 播放次数，默认是1\n     * @param pingPong 默认false\n     * @param curv 默认Liner\n     * @param finishCallBack 默认为空\n     * @param delay 默认0\n     */\n    public static DoScale(\n        target:cc.Node,\n        startValue:cc.Vec2,\n        endValue:cc.Vec2,\n        duration:number,\n        playTimes:number=1,\n        pingPong:boolean=false,\n        curv=XTweenCurvType.Liner,\n        finishCallBack=null,\n        delay=0,\n        ):XTweener\n    {\n        let tweener = new XTweenerScale();\n        tweener.Init(target,startValue,endValue,duration,playTimes,pingPong,curv);\n        tweener.SetFinishCallback(finishCallBack);\n        tweener.SetDelay(delay);\n        return tweener;\n    }\n\n    /**\n     * 返回一个XTweener对象，可以放到group里或者手动调用play播放，不会自动播放\n     * @param target node对象\n     * @param startValue 可以传null\n     * @param endValue 必须有值\n     * @param duration 持续时间\n     * @param playTimes 播放次数，默认是1\n     * @param pingPong 默认false\n     * @param curv 默认Liner\n     * @param finishCallBack 默认为空\n     * @param delay 默认0\n     */\n    public static DoRotate(\n        target:cc.Node,\n        startValue:number,\n        endValue:number,\n        duration:number,\n        playTimes:number=1,\n        pingPong:boolean=false,\n        curv=XTweenCurvType.Liner,\n        finishCallBack=null,\n        delay=0,\n        ):XTweener\n    {\n        let tweener = new XTweenerRotaion();\n        tweener.Init(target,startValue,endValue,duration,playTimes,pingPong,curv);\n        tweener.SetFinishCallback(finishCallBack);\n        tweener.SetDelay(delay);\n        return tweener;\n    }\n\n    // public static DoColor(\n    //     target:cc.Node,\n    //     startValue:Array<number>,\n    //     endValue:Array<number>,\n    //     duration:number,\n    //     playTimes:number=1,\n    //     pingPong:boolean=false,\n    //     curv=XTweenCurvType.Liner,\n    //     finishCallBack=null,\n    //     delay=0,\n    //     ):XTweener\n    // {\n    //     let tweener = new XTweenerColor();\n    //     tweener.Init(target,startValue,endValue,duration,playTimes,pingPong,curv);\n    //     tweener.SetFinishCallback(finishCallBack);\n    //     tweener.SetDelay(delay);\n    //     return tweener;\n    // }\n\n    /**\n     * 返回一个XTweener对象，可以放到group里或者手动调用play播放，不会自动播放\n     * @param target 监测的node对象\n     * @param vauleChangeCallback 当value改变时的回调\n     * @param startValue 填null和0效果一样\n     * @param endValue 必须有值\n     * @param duration 持续时间\n     * @param playTimes 播放次数，默认是1\n     * @param pingPong 默认false\n     * @param curv 默认Liner\n     * @param finishCallBack 默认为空\n     * @param delay 默认0\n     */\n    public static DoValue(\n        target:cc.Node,\n        vauleChangeCallback:(value:number)=>void,\n        startValue:number,\n        endValue:number,\n        duration:number,\n        playTimes:number=1,\n        pingPong:boolean=false,\n        curv=XTweenCurvType.Liner,\n        finishCallBack=null,\n        delay=0)\n    {\n        let tweener = new XTweenerValue();\n        tweener.Init(target,vauleChangeCallback,startValue,endValue,duration,playTimes,pingPong,curv);\n        tweener.SetFinishCallback(finishCallBack);\n        tweener.SetDelay(delay);\n        return tweener;\n    }\n\n    /**\n     * 和DoValue不同的地方就是传入的参数是数组，一般用于颜色变化这种需要多个数值变化的时候\n     * @param target 监测的node对象\n     * @param vauleChangeCallback 当value改变时的回调\n     * @param startValue 填null和0效果一样\n     * @param endValue 必须有值\n     * @param duration 持续时间\n     * @param playTimes 播放次数，默认是1\n     * @param pingPong 默认false\n     * @param curv 默认Liner\n     * @param finishCallBack 默认为空\n     * @param delay 默认0\n     */\n    public static DoValueArray(\n        target:cc.Node,\n        vauleChangeCallback:(value:Array<number>)=>void,\n        startValue:Array<number>,\n        endValue:Array<number>,\n        duration:number,\n        playTimes:number=1,\n        pingPong:boolean=false,\n        curv=XTweenCurvType.Liner,\n        finishCallBack=null,\n        delay=0)\n    {\n        let tweener = new XTweenerValueArray();\n        tweener.Init(target,vauleChangeCallback,startValue,endValue,duration,playTimes,pingPong,curv);\n        tweener.SetFinishCallback(finishCallBack);\n        tweener.SetDelay(delay);\n        return tweener;\n    }\n\n    /**\n     * 创建一个XTweenerGroup，用来做动画组完成复杂的动画\n     */\n    public static CreateXTweenerGroup():XTweenerGroup\n    {\n        let group = new XTweenerGroup();\n        return group;\n    }\n\n    /**\n     * 创建一个XTweenerAction，用来在tweener过程中插入执行一些事件，带有xtweener的一些特性\n     * @param delay 默认0\n     * @param action 事件\n     */\n    public static GetTweenerAction(delay:number,action:()=>void):XTweenerAction\n    {\n        let xTweenerAction = new XTweenerAction();\n        xTweenerAction.SetDelay(delay);\n        xTweenerAction.SetAction(action);\n        return xTweenerAction;\n    }\n}\n"]}