{"version":3,"sources":["assets\\Scripts\\Tools\\XTween\\XTweenerWorldPosition.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,4CAAuC;AACvC,gDAAmD;AAGnD;IAAmD,yCAAQ;IAA3D;QAAA,qEAkEC;QA7DW,aAAO,GAAW,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;;IA6D3C,CAAC;IA3DU,oCAAI,GAAX,UACI,MAAc,EACd,MAAsB,EACtB,MAAc,EACd,QAAe,EACf,SAAgB,EAChB,QAAgB,EAChB,IAAyB;QAAzB,qBAAA,EAAA,OAAK,2BAAc,CAAC,KAAK;QAGzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAEvB,IAAG,MAAM,YAAY,EAAE,CAAC,IAAI,EAC5B;YACI,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACxB;aAED;YACI,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,qBAAqB,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC5D;QAED,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC;QAE1B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,qBAAqB,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEzB,IAAI,CAAC,eAAe,CAAC,SAAS,EAAC,QAAQ,EAAC,IAAI,CAAC,CAAC;IAClD,CAAC;IAEM,sCAAM,GAAb,UAAc,SAAS;QAEnB,iBAAM,MAAM,YAAC,SAAS,CAAC,CAAC;QACxB,IAAG,IAAI,CAAC,UAAU,IAAI,IAAI,EAC1B;YACI,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,OAAO;SACV;QACD,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAC9F,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAE9F,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACrE,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAChC,uCAAuC;QACvC,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAEM,sCAAM,GAAb;QAEI,8BAA8B;QAC9B,IAAI;QACJ,8CAA8C;QAC9C,IAAI;IACR,CAAC;IAEM,2CAAW,GAAlB;QAEI,OAAO,uBAAuB,CAAC;IACnC,CAAC;IACL,4BAAC;AAAD,CAlEA,AAkEC,CAlEkD,kBAAQ,GAkE1D","file":"","sourceRoot":"/","sourcesContent":["import XTweener from \"./Base/XTweener\";\nimport { XTweenCurvType } from \"./Base/XTweenCurv\";\n\n\nexport default class XTweenerWorldPosition extends XTweener \n{\n    // private endPosNode:cc.Node;\n    private endPos:cc.Vec2;\n    private startPos:cc.Vec2;\n    private vec2Tmp:cc.Vec2 = cc.Vec2.ZERO;\n\n    public Init(\n        target:cc.Node,\n        endPos:cc.Node|cc.Vec2,\n        offset:cc.Vec2,\n        duration:number,\n        playTimes:number,\n        pingPong:boolean,\n        curv=XTweenCurvType.Liner,\n    )\n    {\n        this.SetTarget(target);\n\n        if(endPos instanceof cc.Vec2)\n        {\n            this.endPos = endPos;\n        }\n        else\n        {\n            this.endPos = endPos.convertToWorldSpaceAR(cc.Vec2.ZERO);\n        }\n        \n        this.endPos.x += offset.x;\n        this.endPos.y += offset.y;\n\n        this.startPos = target.convertToWorldSpaceAR(cc.Vec2.ZERO);\n        this.duration = duration;\n\n        this.InitTweenerData(playTimes,pingPong,curv);\n    }\n\n    public Update(deltaTime)\n    {\n        super.Update(deltaTime);\n        if(this.beReplaced == true)\n        {\n            this.CheckFinish();\n            return;\n        }\n        this.vec2Tmp.x = this.startPos.x + (this.endPos.x - this.startPos.x) * this.animationProgress;\n        this.vec2Tmp.y = this.startPos.y + (this.endPos.y - this.startPos.y) * this.animationProgress;\n\n        let localPos = this.target.parent.convertToNodeSpaceAR(this.vec2Tmp);\n        this.target.position = localPos;\n        // this.target.position = this.vec2Tmp;\n        this.CheckFinish();\n    }\n\n    public OnPlay()\n    {\n        // if(this.startValue == null)\n        // {\n        //     this.startValue = this.target.position;\n        // }\n    }\n\n    public GetTypeMark()\n    {\n        return \"XTweenerWorldPosition\";\n    }\n}\n"]}