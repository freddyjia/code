{"version":3,"sources":["assets\\Scripts\\Components\\EditBoxListener.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class EditBoxListener extends cc.Component \r\n{\r\n    /*\r\n    ** 该事件在用户点击输入框获取焦点的时候被触发\r\n    */\r\n    onEditDidBeganAction:(editbox:cc.EditBox, customEventData:string)=>void;\r\n    \r\n    onEditDidBegan(editbox:cc.EditBox, customEventData:string)\r\n    {\r\n        if (this.onEditDidBeganAction != null)\r\n            this.onEditDidBeganAction(editbox, customEventData);\r\n    }\r\n\r\n    public AddEditDidBeganHandler(action:(editbox:cc.EditBox, customEventData:string)=>void, customEventData:string=\"\")\r\n    {\r\n        this.onEditDidBeganAction = action;\r\n\r\n        let onEditDidBeganHandler = new cc.Component.EventHandler();\r\n        onEditDidBeganHandler.target = this.node;\r\n        onEditDidBeganHandler.component = \"EditBoxListener\";\r\n        onEditDidBeganHandler.handler = \"onEditDidBegan\";\r\n        onEditDidBeganHandler.customEventData = customEventData;\r\n        \r\n        let editBox = this.node.getComponent(cc.EditBox);\r\n        editBox.editingDidBegan.push(onEditDidBeganHandler);\r\n    }\r\n\r\n    /*\r\n    ** 该事件在用户每一次输入文字变化的时候被触发\r\n    */\r\n    onTextChangedAction:(text:string, editbox:cc.EditBox, customEventData:string)=>void;\r\n\r\n    onTextChanged(text:string, editbox:cc.EditBox, customEventData:string)\r\n    {\r\n        if (this.onTextChangedAction != null)\r\n            this.onTextChangedAction(text, editbox, customEventData);\r\n    }\r\n\r\n    public AddTextChangedHandler(action:(text:string, editbox:cc.EditBox, customEventData:string)=>void, customEventData:string=\"\")\r\n    {\r\n        this.onTextChangedAction = action;\r\n\r\n        let hander = new cc.Component.EventHandler();\r\n        hander.target = this.node;\r\n        hander.component = \"EditBoxListener\";\r\n        hander.handler = \"onTextChanged\";\r\n        hander.customEventData = customEventData;\r\n        \r\n        let editBox = this.node.getComponent(cc.EditBox);\r\n        editBox.textChanged.push(hander);\r\n    }\r\n\r\n    /*\r\n    ** 在单行模式下面，一般是在用户按下回车或者点击屏幕输入框以外的地方调用该函数。 如果是多行输入，一般是在用户点击屏幕输入框以外的地方调用该函数。\r\n    */\r\n    onEditDidEndedAction:(editbox:cc.EditBox, customEventData:string)=>void;\r\n\r\n    onEditDidEnded(editbox:cc.EditBox, customEventData:string)\r\n    {\r\n        if (this.onEditDidEndedAction != null)\r\n            this.onEditDidEndedAction(editbox, customEventData);\r\n    }\r\n\r\n    public AddEditDidEndedHandler(action:(editbox:cc.EditBox, customEventData:string)=>void, customEventData:string=\"\")\r\n    {\r\n        this.onEditDidEndedAction = action;\r\n\r\n        let handler = new cc.Component.EventHandler();\r\n        handler.target = this.node;\r\n        handler.component = \"EditBoxListener\";\r\n        handler.handler = \"onEditDidEnded\";\r\n        handler.customEventData = customEventData;\r\n        \r\n        let editBox = this.node.getComponent(cc.EditBox);\r\n        editBox.editingDidEnded.push(handler);\r\n    }\r\n\r\n   /*\r\n    ** 当用户按下回车按键时的事件回调，目前不支持 windows 平台\r\n    */\r\n   onEditingReturnAction:(editbox:cc.EditBox, customEventData:string)=>void;\r\n\r\n   onEditingReturn(editbox:cc.EditBox, customEventData:string)\r\n   {\r\n        if (this.onEditingReturnAction != null)\r\n            this.onEditingReturnAction(editbox, customEventData);\r\n   }\r\n\r\n   public AddEditingReturnHandler(action:(editbox:cc.EditBox, customEventData:string)=>void, customEventData:string=\"\")\r\n   {\r\n        this.onEditingReturnAction = action;\r\n\r\n        let handler = new cc.Component.EventHandler();\r\n        handler.target = this.node;\r\n        handler.component = \"EditBoxListener\";\r\n        handler.handler = \"onEditingReturn\";\r\n        handler.customEventData = customEventData;\r\n        \r\n        let editBox = this.node.getComponent(cc.EditBox);\r\n        editBox.editingReturn.push(handler);\r\n   }\r\n}\r\n"]}