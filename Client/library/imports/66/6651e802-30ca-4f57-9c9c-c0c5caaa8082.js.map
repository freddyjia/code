{"version":3,"sources":["assets\\Scripts\\Tools\\XTween\\Base\\XTweener.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { XTweenCurvType, XTweenCurv } from \"./XTweenCurv\";\nimport XTweenerIF from \"./XTweenerIF\";\nimport { XTweenerState } from \"./XTweenGlobal\";\nimport XTweenUpdater from \"./XTweenUpdater\";\nimport XTweenObserver from \"./XTweenObserver\";\n\n\nexport default class XTweener implements XTweenerIF\n{\n    private data:any = null;\n    private state:XTweenerState = XTweenerState.BeforePlay;\n    private delay:number = 0;\n    private startCallback:()=>void = null;\n    private finishCallback:()=>void = null;\n    private controlByParent:boolean = false;\n    private speed:number = 1;\n    public shouldCallback:boolean = true;\n    public beReplaced:boolean = false;\n    public target:cc.Node = null;\n    private observer:XTweenObserver = null;\n    private gameObjectDisable:boolean = false;\n    protected duration:number = 0;\n    private shouldFinishCallbackWhenDisable:boolean = false;\n    private currentTime:number = 0;\n    private timeProgress:number = 0;\n    protected pingPong:boolean = false;\n    private currentRepeatTimes:number = 0;\n    protected repeatTimes:number = 1;\n    protected animationProgress:number = 0;\n    protected curvType:XTweenCurvType = XTweenCurvType.Liner;\n    private tCustomCurv:Array<number> = null;\n    private shouldNotFinishWhenDisable = false;\n\n    protected InitTweenerData(\n        playTimes:number,\n        pingPong:boolean,\n        curv=XTweenCurvType.Liner)\n    {\n        if(playTimes == null)\n        {\n            playTimes = 1;\n        }\n\n        if(pingPong == null)\n        {\n            pingPong = false;\n        }\n\n        if(curv == null)\n        {\n            curv = XTweenCurvType.Liner;\n        }\n\n        this.repeatTimes = playTimes;\n        this.pingPong = pingPong;\n        this.curvType = curv;\n\n    }\n\n    //interface\n    public SetTweenerData(data)\n    {\n        this.data = data;\n    }\n    public GetTweenerData()\n    {\n        return this.data;\n    }\n    public SetDelay(delay:number)\n    {\n        this.delay = delay;\n    }\n    public GetDelay()\n    {\n        return this.delay;\n    }\n    public Play()\n    {\n        if(this.state == XTweenerState.BeforePlay)\n        {\n            if(this.startCallback != null)\n            {\n                this.startCallback();\n            }\n        }\n\n        this.state = XTweenerState.Playing;\n        if (this.controlByParent == false)\n        {\n            XTweenUpdater.GetInstance().AddTweener(this as XTweenerIF);\n        }\n\n        this.OnPlay();\n    }\n\n    protected OnPlay()\n    {\n\n    }\n\n\n    public Finish(shouldCallback:boolean=true)\n    {\n        this.state = XTweenerState.End;\n        this.shouldCallback = shouldCallback;\n    }\n    public Pause()\n    {\n        if (this.state == XTweenerState.Playing)\n            this.state = XTweenerState.Pause;\n    }\n    public Resume()\n    {\n        if (this.state == XTweenerState.Pause)\n            this.state = XTweenerState.Playing;\n    }\n    public SetSpeed(speed:number)\n    {\n        this.speed = speed;\n    }\n\n    public SetStartCallback(startCallback:()=>void)\n    {\n        this.startCallback = startCallback;   \n    }\n    public SetFinishCallback(finishCallback:()=>void)\n    {\n        this.finishCallback = finishCallback;\n    }\n    public GetState():XTweenerState\n    {\n        return this.state;\n    }\n    \n    public Update(deltaTime:number)\n    {\n        this.currentTime += deltaTime * this.speed;\n        if(this.duration < 0.01)\n        {\n            if(this.currentTime > this.delay)\n            {\n                this.timeProgress = 1;\n            }\n            else\n            {\n                this.timeProgress = 0;\n            }\n        }\n        else\n        {\n            if(this.pingPong == true && this.currentTime > this.duration)\n            {\n                this.timeProgress = (this.currentTime - this.delay - this.duration) / this.duration;\n                this.timeProgress = 1 - this.timeProgress;\n            }\n            else\n            {\n                this.timeProgress = (this.currentTime - this.delay) / this.duration;\n            }\n        }\n        if(this.timeProgress < 0)\n        {\n            this.timeProgress = 0;\n        }\n        else if(this.timeProgress > 1)\n        {\n            this.timeProgress = 1;\n        }\n\n        if(this.currentTime >= this.delay + this.duration * (this.pingPong == true ? 2 : 1))\n        {\n            this.currentRepeatTimes ++;\n            if(this.currentRepeatTimes >= this.repeatTimes && this.repeatTimes != -1)\n            {\n                this.state = XTweenerState.End;\n            }\n            else\n            {\n                this.currentTime = this.delay;\n            }\n        }\n        this.animationProgress = XTweenCurv.GetProgress(this.curvType, this.timeProgress, this.tCustomCurv);\n    }\n\n    public SetControlByParent()\n    {\n        this.controlByParent = true;\n    }\n\n    public GetControlByParent():boolean\n    {\n        return this.controlByParent;\n    }\n\n    public BeReplaced()\n    {\n        this.beReplaced = true;\n    }\n\n    public GetTypeMark()\n    {\n        return \"XTweener\";\n    }\n\n    public OnDestroy()\n    {\n        this.state = XTweenerState.End;\n    }\n\n    public OnEnable()\n    {\n        this.gameObjectDisable = false;\n    }\n\n    public OnDisable()\n    {\n        if(this.shouldNotFinishWhenDisable == true)\n            return;\n        this.state = XTweenerState.End;\n        this.gameObjectDisable = true;\n    }\n\n    private AddObserver()\n    {\n        this.observer = this.target.getComponent(XTweenObserver);\n        if(this.observer == null)\n        {\n            this.observer = this.target.addComponent(XTweenObserver);\n        }\n    }\n\n    public SetTarget(target:cc.Node)\n    {\n        this.target = target;\n        if(this.observer == null)\n        {\n            this.AddObserver();\n        }\n        this.observer.AddXTweener(this);\n    }\n\n    public SetCustomCurv(curv:Array<number>)\n    {\n        this.tCustomCurv = curv;\n    }\n\n    public SetTime(time:number)\n    {\n        this.duration = time;\n    }\n\n    public SetShouldNotFinishWhenDisable()\n    {\n        this.shouldNotFinishWhenDisable = true;\n    }\n\n    public SetShouldFinishCallbackWhenDisable()\n    {\n        this.shouldFinishCallbackWhenDisable = true;\n    }\n\n    public CheckFinish()\n    {\n        if(this.state == XTweenerState.End)\n        {\n            this.observer.RemoveTweener(this);\n\n            if(this.finishCallback != null \n                && this.shouldCallback == true \n                && (this.gameObjectDisable == false || (this.gameObjectDisable == true && this.shouldFinishCallbackWhenDisable == true)))\n            {\n                this.finishCallback();\n            }\n        }\n        \n    }\n\n}\n"]}