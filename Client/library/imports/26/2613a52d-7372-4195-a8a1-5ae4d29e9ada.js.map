{"version":3,"sources":["assets\\Scripts\\Network\\Socket\\TCPSession.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import TimerManager from \"../../Components/TimerManager\";\nimport DataPacket, { Package } from \"./DataPacket\";\nimport TCPSendTaskManager from \"./TCPSendTaskManager\";\nimport OpenNetworkingUI from \"../../Tools/OpenNetworkingUI\";\nimport Toast from \"../../Tools/Toast\";\nimport Global from \"../../Global/Global\";\nimport { HandshakeRequest, HandshakeResponse } from \"../../Protos/Handshake\";\nimport Language from \"../../Global/Language\";\n\n//对一次网络tcp对话的封装//\nexport default class TCPSession\n{\n    //获取当前时间为。\n    private lastShowToastUI = Date.now();\n    //序列号 1开始。\n    private seq:number = 1;\n    //这里可以选择websoket 或者 tcpsoket --- 自己写tcpsoket(UNITY)  或者直接使用cocos自带的WebSocket。\n    private webSocket:WebSocket\n    //会话id\n    private sessionID:number;\n    //默认对话 没有绑定小游戏类型。\n    // private gameType = GameTypeMgr.Config.None.gameType;\n    //msgID对应(游戏类型和数据回调)。\n    private listenDatas:{[msgID:number]:ListenData} = {};\n    //握手成功标志。\n    private isHandShake:boolean = false;\n    //唯一id。\n    // private uid:string;\n    //许可令牌。\n    // private token:string;\n    //tcp的连接ip\n    private ip:string;\n    //tcp连接端口\n    private port:string;\n    //成功回调\n    private funcConnectSuccess;\n    //失败回调    \n    private funcConnectFail;\n    //挂起回调\n    private hangOnSendFunc;\n    //连接超时的timerID\n    private connectTimeoutTimerID;\n    //8位无符号整型值 内容\n    //A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\n    //* requested number of bytes could not be allocated an exception is raised.\n    private uint8Buffer:Uint8Array = new Uint8Array(0);\n\n    public Init(sessionID)\n    {\n        this.sessionID = sessionID;\n    }\n\n    //链接服务器（ip&port）\n    public Connect(ip,port,funcSuccess,funcFail)\n    {\n        TCPSendTaskManager.GetInstance().InitSession(this.sessionID);//为sessionID配置一份数据结构\n\n        this.ip = ip;\n        this.port = port;\n        this.funcConnectSuccess = funcSuccess;\n        this.funcConnectFail = funcFail;\n\n        OpenNetworkingUI.Show();//加载界面//\n        //绕过闭包this限制\n        let outside = this;\n\n        let protocol = document.location.protocol;\n        let prefix = \"\";\n        //SSL(Secure Socket Layer，安全套接层) \n        if(protocol == \"https:\")\n        {\n            prefix = \"wss://\";//Layer。安全套接层（Secure Socket Layer）上面运行的websocket//\n        }\n        else\n        {\n            prefix = \"ws://\"\n        }\n        \n        let host = prefix+ ip + \":\" + port + \"/ws\";\n        this.webSocket = new WebSocket(host);//初始化绑定host地址的websoket//\n        \n        if(Global.showLog == true)\n            cc.log(\"Connect socket host: \" + host);\n\n        TimerManager.GetInstance().DeleteTimer(this.connectTimeoutTimerID);\n        let connectTimeout = 10;\n        this.connectTimeoutTimerID = TimerManager.GetInstance().CallActionDelay(()=>{\n            this.Disconnect(); //10秒钟了还没反应,则关闭的一系列操作//\n            funcFail(\"连接超时\");\n        },connectTimeout,null,0,0,true);\n\n        //套接字开启\n        this.webSocket.onopen = function (event) {\n            TimerManager.GetInstance().DeleteTimer(outside.connectTimeoutTimerID);\n            OpenNetworkingUI.Hide();\n            if(Global.showLog == true)\n                cc.log(\"onopen \" + event.type + \" this.readyState \" + this.readyState);\n            if(outside.webSocket != null)\n                outside.HandShake(funcSuccess,funcFail);//->握手\n        };\n\n        //接收服务器消息//\n        this.webSocket.onmessage = function (event) {\n            // cc.log(\"onmessage \" + event.data + \" typeof(event.data) \" + typeof(event.data)); 解析数据\n            var reader = new FileReader();\n            //byte为blob对象 \n            reader.readAsArrayBuffer(event.data);//blob对象转array//\n            reader.onload = (e)=>{\n                var buf = new Uint8Array(reader.result as ArrayBuffer);\n\n                if(Global.showLog == true)\n                {\n                    // cc.error(event.data);\n                    // cc.error(\"onreceive \" + buf + \" e.total \" + e.total + \" e.loaded \" + e.loaded);\n                }\n                \n\n                let tmpBuffer = new Uint8Array(outside.uint8Buffer.length + buf.length);//长度的 合并包//\n                tmpBuffer.set(outside.uint8Buffer,0);//\n                tmpBuffer.set(buf,outside.uint8Buffer.length);//数据set 粘贴进tmpBuffer//\n                \n                outside.uint8Buffer = tmpBuffer;//换一下//\n                let packageArray = new Array<Package>();//解包一组 消息号+数据+消息序列号(这条协议的第几次数发送)//\n\n\n                outside.uint8Buffer = DataPacket.UnPacket(outside.uint8Buffer,packageArray);//解包拆包 将数据凑一起。//\n\n                //cc.error(\"outside.uint8Buffer.length \" + outside.uint8Buffer.length);\n                \n                for(let i = 0;i < packageArray.length;i++)\n                {\n                    let packageGet = packageArray[i];\n                    if(packageGet.msgID != 1001)\n                    {\n                        //TODO:加入打印消息//yiba--//\n                    }\n                    if(packageGet.msgID!=1001){\n                        if(Global.showLog == true)\n                            cc.log(\"receive: msgID \" + packageGet.msgID + \" data.length \" + packageGet.data.length + \" seq: \" + packageGet.seq);\n                    }\n\n                    if(packageGet.seq != 0)\n                    {\n                        let task = TCPSendTaskManager.GetInstance().GetTask(outside.sessionID,packageGet.seq);//获取到对应的task//\n                        if(task != null)\n                        {\n                            task.successCallback(packageGet.data);\n                            TCPSendTaskManager.GetInstance().CancelTask(outside.sessionID,packageGet.seq);\n                        }\n                    }\n                    else\n                    {\n                        let listenData = outside.listenDatas[packageGet.msgID];//\n                        if(listenData != null)\n                        {\n                            listenData.func(packageGet.data);\n                        }\n                    }\n                }\n            }\n        };\n\n        this.webSocket.onerror = function (event) {\n            // TimerManager.GetInstance().DeleteTimer(timerID);\n            //暂不依赖 onerror 回调\n            OpenNetworkingUI.Hide();\n            if(Global.showLog == true)\n                cc.log(\"onerror \" + event.returnValue + \" event.type \" + event.type);\n                \n        };\n        this.webSocket.onclose = function (event) {\n            // TimerManager.GetInstance().DeleteTimer(timerID);\n            if(outside.webSocket != null)\n            {\n                //非主动断开\n                outside.webSocket = null;\n                TCPSendTaskManager.GetInstance().CleanSession(outside.sessionID);\n            }\n            if(Global.showLog == true)\n                cc.log(\"onclose event.returnValue \" + event.returnValue);\n        };\n    }\n\n    public HandShake(successCallback,failCallback)\n    {\n\n        let req = HandshakeRequest.create();\n        req.uid = window[\"selfId\"];\n        req.token = window[\"token\"];\n        let senddata = HandshakeRequest.encode(req).finish();\n        let outside = this;\n\n        this.Send(1,senddata,(data)=>{\n            \n            let res = HandshakeResponse.decode(data);\n            if(res.statusCode == 0)\n            {\n                if(Global.showLog == true)\n                    cc.error(\"handshake success\");\n                outside.isHandShake = true;\n                successCallback();\n            }\n            else\n            {\n                if(Global.showLog == true)\n                    cc.error(\"handshake fail\");\n                outside.isHandShake = false;\n                outside.Disconnect();\n            }\n            \n        },failCallback,true);\n    }\n\n    //关闭websoket 清除TCPSendTaskManager sessionID。\n    //删除超时的计时器。\n    public Disconnect()\n    {\n        if(this.webSocket != null)\n        {\n            if(this.webSocket.readyState != WebSocket.CLOSED && this.webSocket.readyState != WebSocket.CLOSING)\n                this.webSocket.close();\n        }\n        TCPSendTaskManager.GetInstance().CleanSession(this.sessionID);\n        this.webSocket = null;\n        TimerManager.GetInstance().DeleteTimer(this.connectTimeoutTimerID);\n    }\n\n    public Send(msgID,data,successCallback,failCallback,hideNetworkingLoading)\n    {\n\n        if(this.webSocket == null)\n        {\n            //需要重连\n            this.Connect(this.ip,this.port,()=>{\n                Toast.Show(Language.text6);\n\n                //因为断网挂起的消息，只会挂起一个\n                this.hangOnSendFunc = ()=>{\n                    this.Send(msgID,data,successCallback,failCallback,hideNetworkingLoading);\n                };\n\n            },()=>{\n\n                if(Date.now() - this.lastShowToastUI > 1000 * 10)\n                {\n                    this.lastShowToastUI = Date.now();\n                    Toast.Show(Language.text7);\n                }\n                this.Disconnect();\n\n            });\n            return;\n        }\n\n        if(this.webSocket.readyState != WebSocket.OPEN)\n        {\n            cc.error(\"非连接成功状态下的数据发送 msgID:\" + msgID);\n            return;\n        }\n\n        if(this.isHandShake == false && msgID != 1)\n        {\n            cc.error(\"未验证的连接，发送失败 isHandShake == false msgID:\" + msgID);\n            Toast.Show(Language.text8);\n            return;\n        }\n\n        let dataSend = DataPacket.Packet(msgID,this.seq,data);\n        TCPSendTaskManager.GetInstance().AddTask(this.sessionID,msgID,this.seq,data,(dataRes)=>{\n\n            if(successCallback != null)\n            {\n                if(hideNetworkingLoading == false)\n                    OpenNetworkingUI.Hide();\n                successCallback(dataRes);\n            }\n        },(errMsg)=>{\n            OpenNetworkingUI.Hide();\n            if(failCallback != null)\n            {\n                failCallback(errMsg);\n            }\n        });\n        if(hideNetworkingLoading == false)\n        {\n            OpenNetworkingUI.Show();\n        }\n\n        // if(msgID != 1001){\n            if(Global.showLog == true)\n                cc.log(\"send msg: msgID \" + msgID + \" seq \" + this.seq + \" data.length \" + data.length);\n        // }\n\n        // cc.error(\"dataSend  \" + dataSend);\n        \n        this.webSocket.send(dataSend);\n\n        this.seq++;\n    }\n\n    public SendOneWay(msgID,data)\n    {\n        // this.SendOneWayWithGameType(GameTypeMgr.Config.None.gameType,msgID,data)\n        if(this.webSocket == null)\n            return;\n\n        if(this.webSocket.readyState != WebSocket.OPEN)\n            return;\n\n        let dataSend = DataPacket.Packet(msgID,0,data);\n        this.webSocket.send(dataSend);\n\n        if(Global.showLog == true)\n            cc.log(\"send oneway msg: msgID \" + msgID + \" data.length \" + data.length);\n    }\n\n    public ListenMsg(msgID,func)\n    {\n        // this.ListenMsgWithGameType(GameTypeMgr.Config.None.gameType,msgID,func)\n        let listenData = new ListenData();\n        listenData.func = func;\n        this.listenDatas[msgID] = listenData;\n    }\n\n    public Clean()\n    {\n        this.Disconnect();\n    }\n\n    public ResendHangOnMsg()\n    {\n        if(this.hangOnSendFunc != null)\n        {\n            this.hangOnSendFunc();\n            this.hangOnSendFunc = null;\n        }\n    }\n\n    public RefreshIPAndPort(ip, port)\n    {\n        this.ip = ip;\n        this.port = port;\n    }\n\n    public ReConnectWhenHandShakeFail()\n    {\n        this.Connect(this.ip,this.port,this.funcConnectSuccess,this.funcConnectFail);\n    }\n}\n\nclass ListenData\n{\n    public func;\n    public gameType;\n}"]}