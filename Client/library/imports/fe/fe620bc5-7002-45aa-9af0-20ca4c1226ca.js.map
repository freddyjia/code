{"version":3,"sources":["assets\\Scripts\\Tools\\XTween\\XTweenerValueArray.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,4CAAuC;AACvC,gDAAmD;AAEnD;IAAgD,sCAAQ;IAAxD;;IAmEA,CAAC;IA1DU,iCAAI,GAAX,UACI,MAAc,EACd,mBAA+C,EAC/C,UAAwB,EACxB,QAAsB,EACtB,QAAe,EACf,SAAgB,EAChB,QAAgB,EAChB,IAAyB;QAAzB,qBAAA,EAAA,OAAK,2BAAc,CAAC,KAAK;QAGzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACvB,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;QAC/C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,wBAAwB;QACxB,4BAA4B;QAC5B,gCAAgC;QAChC,IAAI,CAAC,eAAe,CAAC,SAAS,EAAC,QAAQ,EAAC,IAAI,CAAC,CAAC;QAE9C,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAE3C,CAAC;IAEM,mCAAM,GAAb,UAAc,SAAS;QAEnB,iBAAM,MAAM,YAAC,SAAS,CAAC,CAAC;QACxB,IAAG,IAAI,CAAC,UAAU,IAAI,IAAI,EAC1B;YACI,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,OAAO;SACV;QACD,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAC,CAAC,EAAE,EACtC;YACI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC;SAC5G;QAED,IAAG,IAAI,CAAC,mBAAmB,IAAI,IAAI,EACnC;YACI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC3C;QAED,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAEM,mCAAM,GAAb;QAEI,IAAG,IAAI,CAAC,UAAU,IAAI,IAAI,EAC1B;YACI,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SAC5C;IACL,CAAC;IAEM,wCAAW,GAAlB;QAEI,OAAO,eAAe,CAAC;IAC3B,CAAC;IACL,yBAAC;AAAD,CAnEA,AAmEC,CAnE+C,kBAAQ,GAmEvD","file":"","sourceRoot":"/","sourcesContent":["import XTweener from \"./Base/XTweener\";\nimport { XTweenCurvType } from \"./Base/XTweenCurv\";\n\nexport default class XTweenerValueArray extends XTweener \n{\n    private startValue:Array<number>;\n    private endValue:Array<number>;\n\n    private tmpValue:Array<number>;\n\n    private vauleChangeCallback:(value:Array<number>)=>void;\n\n    public Init(\n        target:cc.Node,\n        vauleChangeCallback:(value:Array<number>)=>void,\n        startValue:Array<number>,\n        endValue:Array<number>,\n        duration:number,\n        playTimes:number,\n        pingPong:boolean,\n        curv=XTweenCurvType.Liner,\n    )\n    {\n        this.SetTarget(target);\n        this.vauleChangeCallback = vauleChangeCallback;\n        this.startValue = startValue;\n        this.endValue = endValue;\n        this.duration = duration;\n        // this.curvType = curv;\n        // this.pingPong = pingPong;\n        // this.repeatTimes = playTimes;\n        this.InitTweenerData(playTimes,pingPong,curv);\n\n        this.tmpValue = [this.endValue.length];\n\n    }\n\n    public Update(deltaTime)\n    {\n        super.Update(deltaTime);\n        if(this.beReplaced == true)\n        {\n            this.CheckFinish();\n            return;\n        }\n        for(let i=0;i<this.endValue.length;i++)\n        {\n            this.tmpValue[i] = this.startValue[i] + (this.endValue[i] - this.startValue[i]) * this.animationProgress;\n        }\n\n        if(this.vauleChangeCallback != null)\n        {\n            this.vauleChangeCallback(this.tmpValue);\n        }\n\n        this.CheckFinish();\n    }\n\n    public OnPlay()\n    {\n        if(this.startValue == null)\n        {\n            this.startValue = [this.endValue.length];\n        }\n    }\n\n    public GetTypeMark()\n    {\n        return \"XTweenerValue\";\n    }\n}\n"]}