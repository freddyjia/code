{"version":3,"sources":["assets\\Scripts\\Tools\\XTween\\Base\\XTweenUpdater.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,+CAA+C;AAC/C,mCAA8B;AAC9B,0DAAqD;AAE/C,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAyB,CAAC;AAG1C;IAiBI;;OAEG;IACH;QAAA,iBAKC;QArBO,aAAQ,GAAqB,EAAE,CAAC;QAiBpC,WAAW;QACX,oBAAU,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,UAAC,SAAS;YACnC,KAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC;sBAzBgB,aAAa;IAKhB,yBAAW,GAAzB;QAEI,IAAG,IAAI,CAAC,UAAU,IAAI,IAAI,EAC1B;YACI,mDAAmD;YACnD,mCAAmC;YACnC,sDAAsD;YACtD,IAAI,CAAC,UAAU,GAAG,IAAI,eAAa,EAAE,CAAC;SACzC;QACD,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAYM,kCAAU,GAAjB,UAAkB,OAAkB;QAEhC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAChC,CAAC;IAEM,6BAAK,GAAZ;QAEI,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACvB,CAAC;IAEO,kCAAU,GAAlB,UAAoB,SAAS;QAEzB,IAAI,WAAW,GAAqB,EAAE,CAAC;QACvC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAC,CAAC,EAAE,EACxC;YACI,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAG,OAAO,CAAC,QAAQ,EAAE,IAAI,4BAAa,CAAC,OAAO,EAC9C;gBACI,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;aAC7B;YACD,IAAG,OAAO,CAAC,QAAQ,EAAE,IAAI,4BAAa,CAAC,GAAG,EAC1C;gBACI,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC7B;SACJ;QACD,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,WAAW,CAAC,MAAM,EAAC,CAAC,EAAE,EACpC;YACI,IAAI,iBAAiB,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;YACvC,cAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAC,iBAAiB,CAAC,CAAC;SACrD;IACL,CAAC;;IAzDgB,aAAa;QADjC,OAAO;OACa,aAAa,CA0DjC;IAAD,oBAAC;CA1DD,AA0DC,IAAA;kBA1DoB,aAAa","file":"","sourceRoot":"/","sourcesContent":["import XTweenerIF from \"./XTweenerIF\";\nimport { XTweenerState } from \"./XTweenGlobal\";\nimport Util from \"../../Util\";\nimport UpdateBeat from \"../../../Manager/UpdateBeat\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class XTweenUpdater //extends cc.Component \n{\n    private static m_Instance:XTweenUpdater;\n\n    private tweeners:Array<XTweenerIF> = [];\n    public static GetInstance():XTweenUpdater\n    {\n        if(this.m_Instance == null)\n        {\n            // let node:cc.Node = new cc.Node(\"XTweenUpdater\");\n            // node.setParent(cc.find(\"Main\"));\n            // this.m_Instance = node.addComponent(XTweenUpdater);\n            this.m_Instance = new XTweenUpdater();\n        }\n        return this.m_Instance;\n    }\n\n    /**\n     *\n     */\n    constructor() {\n        // super();\n        UpdateBeat.GetInstance().Add((deltaTime)=>{\n            this.UpdateFunc(deltaTime);\n        });\n    }\n\n    public AddTweener(tweener:XTweenerIF)\n    {\n        this.tweeners.push(tweener);\n    }\n\n    public Clear()\n    {\n        this.tweeners = [];\n    }\n\n    private UpdateFunc (deltaTime)\n    {\n        let tNeedRemove:Array<XTweenerIF> = [];\n        for(let i = 0;i<this.tweeners.length;i++)\n        {\n            let tweener = this.tweeners[i];\n            if(tweener.GetState() == XTweenerState.Playing)\n            {\n                tweener.Update(deltaTime);\n            }\n            if(tweener.GetState() == XTweenerState.End)\n            {\n                tNeedRemove.push(tweener);\n            }\n        }\n        for(let i=0;i<tNeedRemove.length;i++)\n        {\n            let needRemoveTweener = tNeedRemove[i];\n            Util.RemoveArray(this.tweeners,needRemoveTweener);\n        }\n    }\n}\n"]}