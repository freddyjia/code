{"version":3,"sources":["assets\\Scripts\\Components\\ListView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Util from \"../Tools/Util\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class ListView extends cc.Component \n{\n    private scrollview:cc.ScrollView;\n    public  contentView:cc.Node;\n    private scrollBar:cc.Scrollbar;\n    private scrollstyle:ListViewScrollStyle;\n    private spacingForRowCallback:(row:number)=>number;\n    private countOfRowsCallback:()=>number;\n    private getCellCallback:()=>Cell;\n    private cellForRow:(cell:Cell)=>void;\n\n    //data-------------->>\n    private totalHeight:number;\n    private unuseCell:Array<Cell> = [];\n    private usingCell:{[row:number]:Cell} = {};\n    private posForRows:Array<number> = [];\n    private spaceForRows:Array<number> = [];\n    private offset:number = 0;\n    private lastOffset:number = 0;\n    private currentStartRow:number = -1;\n    private currentEndRow:number = -1;\n    private lastStartRow:number = -1;\n    private lastEndRow:number = -1;\n    private currentRows:number = 0;\n    //<<----------------data\n\n\n    /**\n     * listview 初始化\n     * @param [scrollstyle] 样式\n     * @param [spacingForRowCallback] 返回行高，可动态改变\n     * @param [countOfRowsCallback] 返回行数，可动态改变\n     * @param [getCellCallback] 返回一个新建的cell，可以继承Cell类\n     * @param [cellForRow] 每当要刷新一个cell的时候会回调\n     */\n    public Init(\n        scrollstyle:ListViewScrollStyle,\n        spacingForRowCallback:(row:number)=>number,\n        countOfRowsCallback:()=>number,\n        getCellCallback:()=>Cell,\n        cellForRow:(cell:Cell)=>void\n        )\n    {\n        this.spacingForRowCallback = spacingForRowCallback;\n        this.countOfRowsCallback = countOfRowsCallback;\n        this.getCellCallback = getCellCallback;\n        this.cellForRow = cellForRow;\n\n        this.scrollstyle = scrollstyle;\n\n        this.scrollview = this.node.addComponent(cc.ScrollView);\n        \n        let view = new cc.Node(\"view\");\n        this.node.addChild(view);\n        view.position = cc.Vec2.ZERO;\n        view.setContentSize(this.node.getContentSize());\n\n        let mask = view.addComponent(cc.Mask);\n        mask.type = cc.Mask.Type.RECT;\n\n        this.contentView = new cc.Node(\"content\");\n        view.addChild(this.contentView);\n        this.contentView.position = cc.Vec2.ZERO;\n        this.contentView.setContentSize(this.node.getContentSize());\n\n        this.scrollview.content = this.contentView;\n\n        //TODO:\n        if(this.scrollstyle == ListViewScrollStyle.Top)\n        {\n            this.node.anchorX = 0.5;\n            \n            this.node.anchorY = 1;\n\n            let pos = this.node.position;\n            pos.y += 0.5 * this.node.getContentSize().height;\n            this.node.setPosition(pos);\n\n            view.anchorX = 0.5;\n            view.anchorY = 1;\n\n            this.contentView.anchorX = 0.5;\n            this.contentView.anchorY = 1;\n\n            this.scrollview.vertical = true;\n            this.scrollview.horizontal = false;\n        }\n\n        Util.SetScrollViewScrollEvent(this.scrollview, (scrollView, eventType:cc.ScrollView.EventType, data)=>{\n            if (eventType == cc.ScrollView.EventType.SCROLL_TO_BOTTOM)\n            {\n                if (this.scrollBottomShouldCallback)\n                {\n                    if (this.actionScrollBottomCallback!=null)\n                    {\n                        this.actionScrollBottomCallback();\n                    }\n                }\n            }\n        })\n    }\n\n    public SetVerticalScrollBar(scrollbar:cc.Scrollbar)\n    {\n        this.scrollview.verticalScrollBar = scrollbar;\n        // if(this.scrollstyle == ListViewScrollStyle.Top)\n        // {\n        //     scrollbar.node.anchorX = 0.5;\n        //     scrollbar.node.anchorY = 1;\n\n        //     let pos = scrollbar.node.position;\n        //     pos.y = 0;\n        //     scrollbar.node.setPosition(pos);\n        // }\n    }\n\n    public SetHorizontalScrollBar(scrollbar:cc.Scrollbar)\n    {\n        this.scrollview.horizontalScrollBar = scrollbar;\n    }\n\n    public Refresh()\n    {\n        this.posForRows = [];\n        this.spaceForRows = [];\n        this.totalHeight = 0;\n        let countOfRows = this.countOfRowsCallback();\n        // ccC.error(\"Refresh countOfRows  \" + countOfRows);\n        this.currentRows = countOfRows;\n        for(let i=0;i<countOfRows;i++)\n        {\n            let space = this.spacingForRowCallback(i);\n            this.posForRows.push(this.totalHeight);\n            this.spaceForRows.push(space);\n            this.totalHeight += space;\n        }\n\n        if(this.scrollstyle == ListViewScrollStyle.Top)\n        {\n            this.contentView.height = this.totalHeight;\n            if(this.scrollview.getScrollOffset().y > this.totalHeight - this.scrollview.node.getContentSize.length)\n            {\n                this.scrollview.scrollToOffset(new cc.Vec2(0,this.totalHeight - this.scrollview.node.getContentSize.length));\n            }\n        }\n\n        this.ShowCurrentRows(true);\n    }\n\n    public ScrollToTop()\n    {\n        this.scrollview.scrollToTop();\n    }\n\n    private GetRowsShouldShow(forceRefresh:boolean)\n    {\n        if(this.offset == this.lastOffset && forceRefresh == false)\n            return;\n\n        if(this.offset <= 0)\n        {\n            this.currentStartRow = 0;\n        }\n        else\n        {\n            if(this.offset > this.lastOffset)\n            {\n                for(let i = this.currentStartRow;i < this.posForRows.length;i ++)\n                {\n                    this.currentStartRow = i;\n                    if(this.posForRows[i] == this.offset \n                        || (this.posForRows[i]<this.offset && this.posForRows[i] + this.spaceForRows[i] > this.offset))\n                        break;\n                }\n            }\n            else\n            {\n                for(let i = this.currentStartRow;i >= 0;i --)\n                {\n                    this.currentStartRow = i;\n                    if(this.posForRows[i] == this.offset\n                        || (this.posForRows[i]<this.offset && this.posForRows[i] + this.spaceForRows[i] > this.offset))\n                        break;\n                }\n            }\n        }\n\n        for(let i = this.currentStartRow;i<this.posForRows.length;i++)\n        {\n            this.currentEndRow = i;\n            if(this.posForRows[i] + this.spaceForRows[i] > this.offset + this.node.height)\n                break;\n        }\n\n        // ccC.error(\n        //     \" this.offset \" + this.offset \n        // + \" this.lastStartRow \" + this.lastStartRow \n        // + \" lastEndRow \" + this.lastEndRow \n        // + \" this.currentStartRow  \" + this.currentStartRow \n        // + \" this.currentEndRow \" + this.currentEndRow);\n\n        this.lastOffset = this.offset;\n    }\n\n    private ShowCurrentRows(forceRefresh:boolean)\n    {\n        if(this.currentRows == 0)\n        {\n            this.currentRows = -1;\n            this.HideAll();\n            this.currentStartRow = -1;\n            this.currentEndRow = -1;\n            return;\n        }\n        this.lastStartRow = this.currentStartRow;\n        this.lastEndRow = this.currentEndRow;\n        this.GetRowsShouldShow(forceRefresh);\n\n        //6种区间关系\n        /*\n        1.---       \n            |\n         ---|-\n         |  |\n         |  |\n         |  |\n         ---|-\n          ---  \n\n        2.\n         ---\n         |\n        -|---\n         |  |\n         |  |\n        -|---\n         |  \n         ---\n\n         3.\n         ----\n         |\n         |\n         |\n         |-----\n         |    |\n         ---- |\n              |\n              |\n         ------\n\n         4.\n       -----\n           |\n       ----|\n       |   |\n       |----   \n       |\n       |\n       -----\n\n       5.\n       ---\n       |\n       |\n       ---\n\n       ---\n         |\n         |\n       ---\n       \n       6.\n       ---\n         |\n         |\n       ---\n\n       ---\n       |\n       |\n       ---\n\n       *****************\n       ---\n       |\n       |\n       --- 是last\n\n       ---\n         |\n         |\n       --- 是current\n\n        */\n    //    cc.error(\"this.lastStartRow  \" + this.lastStartRow + \" this.currentStartRow \" + this.currentStartRow \n    //    + \" this.lastEndRow \" + this.lastEndRow + \" this.currentEndRow \" + this.currentEndRow);\n\n        if(this.lastStartRow != this.currentStartRow || this.lastEndRow != this.currentEndRow || forceRefresh == true)\n        {\n            // ccC.error(\"******\");\n            let shouldCallCellForRow = !forceRefresh;//强制刷新的话cellForRow放在最后统一执行\n            if(this.lastStartRow >= this.currentStartRow && this.lastEndRow <= this.currentEndRow)\n            {\n                // ccC.error(\"1\");\n                for(let i=this.currentStartRow;i<this.lastStartRow;i++)\n                {\n                    this.ShowRow(i,shouldCallCellForRow);\n                }\n\n                for(let i=this.lastEndRow + 1;i<=this.currentEndRow;i++)\n                {\n                    this.ShowRow(i,shouldCallCellForRow);\n                }\n            }\n            else if(this.lastStartRow <= this.currentStartRow && this.lastEndRow >= this.currentEndRow)\n            {\n                // ccC.error(\"2\");\n                for(let i=this.lastStartRow;i<this.currentStartRow;i++)\n                {\n                    this.HideRow(i);\n                }\n                for(let i=this.currentEndRow + 1;i<=this.lastEndRow;i++)\n                {\n                    this.HideRow(i);\n                }\n            }\n            else if(this.lastStartRow <= this.currentStartRow && this.lastEndRow >= this.currentStartRow && this.lastEndRow <= this.currentEndRow)\n            {\n                // ccC.error(\"3\");\n                for(let i=this.lastStartRow;i<this.currentStartRow;i++)\n                {\n                    this.HideRow(i);\n                }\n                for(let i=this.lastEndRow + 1;i <= this.currentEndRow;i++)\n                {\n                    this.ShowRow(i,shouldCallCellForRow);\n                }\n            }\n            else if(this.lastStartRow <= this.currentEndRow && this.lastEndRow >= this.currentEndRow && this.lastStartRow >= this.currentStartRow)\n            {\n                // ccC.error(\"4\");\n                for(let i=this.currentEndRow + 1;i <= this.lastEndRow;i++)\n                {\n                    this.HideRow(i);\n                }\n                for(let i=this.currentStartRow;i<this.lastStartRow;i++)\n                {\n                    this.ShowRow(i,shouldCallCellForRow);\n                }\n            }\n            else if(this.lastEndRow <= this.currentStartRow || this.lastStartRow >= this.currentEndRow)\n            {\n                // ccC.error(\"5\");\n                for(let i=this.lastStartRow;i<=this.lastEndRow;i++)\n                {\n                    if(i != this.currentStartRow || i != this.currentEndRow)\n                        this.HideRow(i);\n                }\n                for(let i=this.currentStartRow;i<= this.currentEndRow;i++)\n                {\n                    this.ShowRow(i,shouldCallCellForRow);\n                }\n            }\n\n            if(forceRefresh == true)\n            {\n                for(let i=this.currentStartRow;i<=this.currentEndRow;i++)\n                {\n                    let cell:Cell = this.usingCell[i];\n                    this.cellForRow(cell);\n                }\n            }\n        }\n\n    }\n\n    private ShowRow(row:number,shouldCallCellForRow:boolean)\n    {\n        // cc.error(\"ShowRow \" + row);\n        let cell:Cell;  \n        if(this.unuseCell.length > 0)\n        {\n            cell = this.unuseCell.pop();\n        }\n        else\n        {\n            cell = this.getCellCallback();\n            this.contentView.addChild(cell.content);\n        }\n        cell.row = row;\n        cell.content.active = true;\n        //TODO:\n        if(this.scrollstyle == ListViewScrollStyle.Top)\n        {\n            let pos = cell.content.position;\n            pos.x = 0;\n            pos.y = -this.posForRows[row] - this.spaceForRows[row] / 2;\n            cell.content.setPosition(pos);\n        }\n        if(shouldCallCellForRow == true)\n            this.cellForRow(cell);\n        this.usingCell[row] = cell;\n    }\n\n    private HideRow(row:number)\n    {\n        // ccC.error(\"HideRow \" + row);\n        let cell = this.usingCell[row];\n        if(cell != null)\n        {\n            cell.content.active = false;\n            this.unuseCell.push(cell);\n            this.usingCell[row] = null;\n        }\n        \n    }\n\n    private HideAll()\n    {\n        for(let i=this.currentStartRow;i<=this.currentEndRow;i++)\n        {\n            this.HideRow(i);\n        }\n    }\n\n    onLoad () \n    {\n\n    }\n\n    start () \n    {\n\n    }\n\n    private tmpOffset:number = 0;\n    update (dt) \n    {\n        if(this.scrollview != null && this.currentRows > 0)\n        {\n            this.offset = this.scrollview.getScrollOffset().y;\n            if(Math.abs(this.offset - this.tmpOffset) > 20)\n            {\n                this.tmpOffset = this.offset;\n                this.ShowCurrentRows(false);\n            }\n            \n        }\n    }\n\n    // 当ListView滑动到底部时是否执行回调\n    scrollBottomShouldCallback:boolean;\n\n    public SetScrollToBottomShouldCallback(shouldCallback:boolean)\n    {\n        this.scrollBottomShouldCallback = shouldCallback;\n    }\n\n    // 滑动到底部时执行回调\n    actionScrollBottomCallback:()=>void;\n    public SetScrollBottomCallback(actionCallback:()=>void)\n    {\n        this.actionScrollBottomCallback = actionCallback;\n    }\n\n    // 获取ScrollView\n    public GetScrollView()\n    {\n        return this.scrollview;\n    }\n}\n\nexport class Cell\n{\n    public content:cc.Node;\n    public row:number;\n}\n\nexport enum ListViewScrollStyle\n{\n    Top,//手指向上划为下一行\n    Bottom,\n    Left,\n    Right,\n}\n\n\n\n"]}