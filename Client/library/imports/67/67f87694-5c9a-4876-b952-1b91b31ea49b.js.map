{"version":3,"sources":["assets\\Scripts\\Tools\\UploadIMG.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["export default class UploadIMG {\r\n\r\n    // ts 代码\r\n    // 选择本地文件，以下callback为函数回调参数\r\n    public static openLocalFile(callback: (file: File) => void) {\r\n        let inputEl: HTMLInputElement = <HTMLInputElement>document.getElementById('file_input');// 类型转行 HTMLInputElement ，方便下面的 inputEl.files 调用\r\n        if (!inputEl) {\r\n            // 只创建一次\r\n            console.log('xxxxxx createElement input');\r\n            inputEl = document.createElement('input');\r\n            inputEl.id = 'file_input';\r\n            inputEl.setAttribute('id', 'file_input');\r\n            inputEl.setAttribute('type', 'file');\r\n            inputEl.setAttribute('class', 'fileToUpload');\r\n            inputEl.style.opacity = '0';// 不可见\r\n            inputEl.style.position = 'absolute';\r\n            document.body.appendChild(inputEl);\r\n        }\r\n        // 这个和 inputEl.onchange 的效果是一样的，2选1就可以了\r\n        // inputEl.addEventListener('change', (event) => {\r\n        //    console.log('xxx onchange1', event, inputEl.value);\r\n        // });\r\n        inputEl.onchange = (event) => {\r\n            // console.log('xxx onchange2', event, inputEl.files);\r\n            let files = inputEl.files;// 我在Mac上测试，每次只能选一个文件\r\n            if (files && files.length > 0) {\r\n                var file = files[0];\r\n                if (callback) callback(file);\r\n            }\r\n        }\r\n        inputEl.click();// 模拟点击，触发文件选择弹出框，据说有的浏览器不支持，chrome是没问题的\r\n    }\r\n\r\n\r\n    public static upload(file: File) {\r\n        // 使用表单设置文件，发送上传消息到服务器\r\n        let forms = new FormData();\r\n        forms.append(\"file\", file);// 必填，key不限制必须\"file\"，根据nestjs服务器逻辑填写\r\n        forms.append('fileName', file.name);// 选填，根据nestjs服务器逻辑填写\r\n        forms.append('targetPath', 'test');// 选填，根据nestjs服务器逻辑填写\r\n        let xhr = cc.loader.getXMLHttpRequest();//new XMLHttpRequest();\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState == 4) {\r\n                if (xhr.status >= 200 && xhr.status <= 300 || xhr.status == 304) {\r\n                    console.log(xhr.response)\r\n                }\r\n            } else {\r\n                console.log(xhr.status)\r\n            }\r\n        }\r\n        xhr.open('POST', 'http://localhost:443/api/v1/upload', true);\r\n        // xhr.setRequestHeader 的问题卡了好久，\r\n        // nestjs那边一直报错，nestjs的文档要求是 multipart/form-data 格式，\r\n        // 但是要是你自己设置的话会导致 Boundary 丢失，nestjs 的multer中间件解析错误，报错\"Multipart: Boundary not found\"，\r\n        // 所以不设置\"multipart/form-data\"，自动生成就好，可以在network里查看发送的消息头已经自动添加好了\"Content-Type\"，\r\n        // 网上各路大神各种花式解决方案，都未解决我的困惑，最后参考这个链接解决，跪谢https://blog.csdn.net/yun_hou/article/details/97004557\r\n        // xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");// multer不会处理非\"multipart/form-data\"表单\r\n        // xhr.setRequestHeader(\"Content-Type\", \"multipart/form-data\");\r\n        // console.log(forms);// 打印不出来什么的，所以放弃吧\r\n        xhr.addEventListener(\"progress\", function (evt) {\r\n            console.log('xxx progress', evt);// 上传进度，我只看到打印一次\r\n        }, false);\r\n        xhr.send(forms);\r\n    }\r\n\r\n\r\n    // 展示本地图片到sprite\r\n    public static showImage(base64: string, sprite: cc.Sprite) {\r\n        // 读取文件为base64数据流\r\n\r\n        this.base64ToSpriteFrame(base64, (spriteFrame: cc.SpriteFrame) => {\r\n            if (sprite) sprite.spriteFrame = spriteFrame;\r\n        });\r\n\r\n    }\r\n    // 读取文件为base64数据流\r\n    public static readFile(file: File, callback: (base64: string) => void) {\r\n        var reader = new FileReader();\r\n        reader.onload = function (event2) {\r\n            if (callback) {\r\n                if (reader.readyState == FileReader.DONE) {\r\n                    // console.log('xxx FileReader', event2, reader.result);\r\n                    callback(reader.result.toString());\r\n                } else {\r\n                    console.error('FileReader read error', event2, reader.result);\r\n                    callback(null);\r\n                }\r\n            }\r\n        };\r\n        // reader.readAsText(file);//作为字符串读出\r\n        reader.readAsDataURL(file);\r\n        //reader.readAsText(file,'gb2312');//默认是用utf-8格式输出的，想指定输出格式就再添加一个参数，像txt的ANSI格式只能用国标才能显示出来\r\n    }\r\n    //\r\n    public static base64ToSpriteFrame(base64: string, callback: (this: void, spriteFrame: cc.SpriteFrame) => void) {\r\n        var img = new Image();\r\n        console.warn(\"------------准备合成-------------\")\r\n        img.onload = function () {\r\n            console.warn(\"*********img.onload**********\")\r\n            var texture = new cc.Texture2D();\r\n            texture.initWithElement(img);\r\n            texture.handleLoadedTexture();\r\n            var newframe = new cc.SpriteFrame(texture);\r\n            if (callback) callback(newframe);\r\n        }\r\n        img.onerror = function (err) {\r\n            console.warn(\"------合成报错-----\", err)\r\n        }\r\n        if ((<any>base64).startsWith !== undefined && (<any>base64).startsWith(\"data:image\")) {\r\n            img.src = base64;\r\n        } else {\r\n            img.src = \"data:image/png;base64,\" + base64;\r\n        }\r\n    }\r\n}"]}