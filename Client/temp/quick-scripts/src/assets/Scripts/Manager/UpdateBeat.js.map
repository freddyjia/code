{"version":3,"sources":["assets\\Scripts\\Manager\\UpdateBeat.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACM,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAyB,CAAC;AAG1C;IAAwC,8BAAY;IAqBhD;;OAEG;IACH;QAAA,YACI,iBAAO,SAEV;QAzBO,oBAAc,GAA8B,EAAE,CAAC;QACvD,2CAA2C;QACnC,QAAE,GAAG,CAAC,CAAC;QAEP,sBAAgB,GAAiB,EAAE,CAAC;QAoBxC,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;;IACrC,CAAC;mBA3BgB,UAAU;IAUb,sBAAW,GAAzB;QAEI,IAAG,IAAI,CAAC,UAAU,IAAI,IAAI,EAC1B;YACI,IAAI,IAAI,GAAW,IAAI,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAC7C,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,YAAU,CAAC,CAAC;SACnD;QACD,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAUM,wBAAG,GAAV,UAAW,IAA6B;QAEpC,IAAG,IAAI,IAAI,IAAI;YACX,OAAO;QACX,IAAI,CAAC,EAAE,EAAE,CAAC;QACV,IAAI,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC;QAC/B,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;QAClC,+BAA+B;QAC/B,OAAO,KAAK,CAAC;IACjB,CAAC;IAEO,sCAAiB,GAAzB;QAEI,IAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,IAAI,CAAC;YAChC,OAAO;QACX,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAC,CAAC,EAAE,EAChD;YACI,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;YACrD,kDAAkD;SACrD;QACD,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;IAC/B,CAAC;IAEM,2BAAM,GAAb,UAAc,EAAS;QAEnB,IAAG,EAAE,IAAI,IAAI,EACb;YACI,OAAO;SACV;QACD,IAAG,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,IAAI,IAAI;YAC9B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACvC,CAAC;IAED;;OAEG;IACH,oBAAoB;IACpB,IAAI;IACJ,yCAAyC;IACzC,QAAQ;IACR,0CAA0C;IAC1C,QAAQ;IACR,IAAI;IAEJ,2BAAM,GAAN,UAAQ,EAAE;QAEN,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACzB,IAAI,SAAS,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;QAEvD,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,KAAI,IAAI,EAAE,IAAI,IAAI,CAAC,cAAc,EACjC;YACI,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC;SACtC;QAED,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;IAClC,CAAC;;IAxFgB,UAAU;QAD9B,OAAO;OACa,UAAU,CAyF9B;IAAD,iBAAC;CAzFD,AAyFC,CAzFuC,EAAE,CAAC,SAAS,GAyFnD;kBAzFoB,UAAU","file":"","sourceRoot":"/","sourcesContent":["\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class UpdateBeat extends cc.Component \n{\n    private dicUpdateFuncs:{[id:number]:(data)=>void} = {};\n    // private dicDatas:{[id:number]:any} = {};\n    private id = 0;\n\n    private listWaitToDelete:Array<string> = [];\n    private lastUpdateTime;\n\n    private static m_Instance:UpdateBeat;\n    public static GetInstance():UpdateBeat\n    {\n        if(this.m_Instance == null)\n        {\n            let node:cc.Node = new cc.Node(\"UpdateBeat\");\n            node.setParent(cc.find(\"Main\"));\n            this.m_Instance = node.addComponent(UpdateBeat);\n        }\n        return this.m_Instance;\n    }\n\n    /**\n     *\n     */\n    constructor() {\n        super();\n        this.lastUpdateTime = Date.now();\n    }\n\n    public Add(func:(deltaTime:number)=>void):string\n    {\n        if(func == null)\n            return;\n        this.id++;\n        let idStr = this.id.toString();\n        this.dicUpdateFuncs[idStr] = func;\n        // this.dicDatas[idStr] = data;\n        return idStr;\n    }\n\n    private DeleteUpdateFuncs()\n    {\n        if(this.listWaitToDelete.length == 0)\n            return;\n        for(let i = 0;i<this.listWaitToDelete.length;i++)\n        {\n            delete this.dicUpdateFuncs[this.listWaitToDelete[i]];\n            // delete this.dicDatas[this.listWaitToDelete[i]];\n        }\n        this.listWaitToDelete = [];\n    }\n\n    public Remove(id:string)\n    {\n        if(id == null)\n        {\n            return;\n        }\n        if(this.dicUpdateFuncs[id] != null)\n            this.listWaitToDelete.push(id);\n    }\n\n    /**\n     * 只有登出的时候调用，其他时候别调用\n     */\n    // public ClearAll()\n    // {\n    //     for(let id in this.dicUpdateFuncs)\n    //     {\n    //         this.listWaitToDelete.push(id);\n    //     }\n    // }\n\n    update (dt) \n    {\n        let timeNow = Date.now();\n        let deltaTime = (timeNow - this.lastUpdateTime) / 1000;\n        \n        this.DeleteUpdateFuncs();\n        \n        for(let id in this.dicUpdateFuncs)\n        {\n            this.dicUpdateFuncs[id](deltaTime);\n        }\n\n        this.DeleteUpdateFuncs();\n\n        this.lastUpdateTime = timeNow;\n    }\n}\n"]}