{"version":3,"sources":["assets\\Scripts\\Tools\\XTween\\XTweenerScale.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,4CAAuC;AACvC,gDAAmD;AAGnD;IAA2C,iCAAQ;IAAnD;;IAqDA,CAAC;IAhDU,4BAAI,GAAX,UACI,MAAc,EACd,UAAkB,EAClB,QAAgB,EAChB,QAAe,EACf,SAAgB,EAChB,QAAgB,EAChB,IAAyB;QAAzB,qBAAA,EAAA,OAAK,2BAAc,CAAC,KAAK;QAGzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,wBAAwB;QACxB,4BAA4B;QAC5B,gCAAgC;QAChC,IAAI,CAAC,eAAe,CAAC,SAAS,EAAC,QAAQ,EAAC,IAAI,CAAC,CAAC;IAClD,CAAC;IAEM,8BAAM,GAAb,UAAc,SAAS;QAEnB,iBAAM,MAAM,YAAC,SAAS,CAAC,CAAC;QACxB,IAAG,IAAI,CAAC,UAAU,IAAI,IAAI,EAC1B;YACI,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,OAAO;SACV;QACD,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC;QACxG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAExG,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAEM,8BAAM,GAAb;QAEI,IAAG,IAAI,CAAC,UAAU,IAAI,IAAI,EAC1B;YACI,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;YAC9B,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;YACvC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;SAC1C;IACL,CAAC;IAEM,mCAAW,GAAlB;QAEI,OAAO,eAAe,CAAC;IAC3B,CAAC;IACL,oBAAC;AAAD,CArDA,AAqDC,CArD0C,kBAAQ,GAqDlD","file":"","sourceRoot":"/","sourcesContent":["import XTweener from \"./Base/XTweener\";\nimport { XTweenCurvType } from \"./Base/XTweenCurv\";\n\n\nexport default class XTweenerScale extends XTweener \n{\n    private startValue:cc.Vec2;\n    private endValue:cc.Vec2;\n\n    public Init(\n        target:cc.Node,\n        startValue:cc.Vec2,\n        endValue:cc.Vec2,\n        duration:number,\n        playTimes:number,\n        pingPong:boolean,\n        curv=XTweenCurvType.Liner,\n    )\n    {\n        this.SetTarget(target);\n        this.startValue = startValue;\n        this.endValue = endValue;\n        this.duration = duration;\n        // this.curvType = curv;\n        // this.pingPong = pingPong;\n        // this.repeatTimes = playTimes;\n        this.InitTweenerData(playTimes,pingPong,curv);\n    }\n\n    public Update(deltaTime)\n    {\n        super.Update(deltaTime);\n        if(this.beReplaced == true)\n        {\n            this.CheckFinish();\n            return;\n        }\n        this.target.scaleX = this.startValue.x + (this.endValue.x - this.startValue.x) * this.animationProgress;\n        this.target.scaleY = this.startValue.y + (this.endValue.y - this.startValue.y) * this.animationProgress;\n\n        this.CheckFinish();\n    }\n\n    public OnPlay()\n    {\n        if(this.startValue == null)\n        {\n            this.startValue = cc.Vec2.ONE;\n            this.startValue.x = this.target.scaleX;\n            this.startValue.y = this.target.scaleY;\n        }\n    }\n\n    public GetTypeMark()\n    {\n        return \"XTweenerScale\";\n    }\n}\n"]}