{"version":3,"sources":["assets\\Scripts\\Tools\\AtlasFont.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,yCAAoC;AAE9B,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAyB,CAAC;AAG1C;IAAuC,6BAAY;IAAnD;;IA2DA,CAAC;IAnDU,wBAAI,GAAX,UAAY,KAAa,EAAE,iBAA0C;QACjE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAA;QACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QACtC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;QAClB,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAA;QAE1C,KAAgB,UAAqB,EAArB,KAAA,IAAI,CAAC,OAAO,CAAC,QAAQ,EAArB,cAAqB,EAArB,IAAqB,EAAE;YAAlC,IAAI,GAAG,SAAA;YACR,GAAG,CAAC,MAAM,GAAG,KAAK,CAAA;SACrB;IACL,CAAC;IAED,kBAAkB;IACX,8BAAU,GAAjB,UAAkB,OAAe,EAAE,UAA6B;QAC5D,0CAA0C;QADX,2BAAA,EAAA,iBAA6B;QAG5D,OAAO;QACP,KAAgB,UAAqB,EAArB,KAAA,IAAI,CAAC,OAAO,CAAC,QAAQ,EAArB,cAAqB,EAArB,IAAqB,EAAE;YAAlC,IAAI,GAAG,SAAA;YACR,GAAG,CAAC,MAAM,GAAG,KAAK,CAAA;SACrB;QAED,OAAO;QACP,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC9D,IAAI,IAAI,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;YACzC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAA;SACtC;QAED,IAAI,KAAK,GAAG,CAAC,CAAA;QACb,IAAI,MAAM,GAAG;YACT,EAAE,KAAK,CAAA;YACP,IAAI,KAAK,IAAI,OAAO,CAAC,MAAM,IAAI,UAAU,IAAI,IAAI,EAAE;gBAC/C,UAAU,EAAE,CAAA;aACf;QACL,CAAC,CAAA;QAED,YAAY;QACZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACrC,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;YACnC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAA;YAClB,IAAI,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;YAClE,mBAAS,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,eAAe,EAAE,MAAM,CAAC,CAAA;SAC9F;IAEL,CAAC;IAEM,yBAAK,GAAZ;QACI,KAAgB,UAAqB,EAArB,KAAA,IAAI,CAAC,OAAO,CAAC,QAAQ,EAArB,cAAqB,EAArB,IAAqB,EAAE;YAAlC,IAAI,GAAG,SAAA;YACR,GAAG,CAAC,MAAM,GAAG,KAAK,CAAA;SACrB;IACL,CAAC;IAxDgB,SAAS;QAD7B,OAAO;OACa,SAAS,CA2D7B;IAAD,gBAAC;CA3DD,AA2DC,CA3DsC,EAAE,CAAC,SAAS,GA2DlD;kBA3DoB,SAAS","file":"","sourceRoot":"/","sourcesContent":["import Extension from \"./Extension\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class AtlasFont extends cc.Component {\n\n    private tarNode: cc.Node\n    private atlas: string\n    private getSpriteNameFunc: (val: string) => string\n    private firstNode\n\n\n    public Init(atlas: string, getSpriteNameFunc: (val: string) => string) {\n        this.tarNode = this.node\n        this.firstNode = this.node.children[0]\n        this.atlas = atlas\n        this.getSpriteNameFunc = getSpriteNameFunc\n\n        for (let val of this.tarNode.children) {\n            val.active = false\n        }\n    }\n\n    //需要一个布局组件 设置好自动布局\n    public SetContent(content: string, okCallback: () => void = null) {\n        // var node = cc.instantiate(prefabAsset);\n\n        //先全部隐藏\n        for (let val of this.tarNode.children) {\n            val.active = false\n        }\n\n        //创建不足够\n        for (let i = this.tarNode.childrenCount; i < content.length; i++) {\n            let node = cc.instantiate(this.firstNode)\n            node.parent = this.firstNode.parent\n        }\n\n        let okCnt = 0\n        let fAllOk = () => {\n            ++okCnt\n            if (okCnt == content.length && okCallback != null) {\n                okCallback()\n            }\n        }\n\n        //设置各个sprite\n        for (let i = 0; i < content.length; i++) {\n            let node = this.tarNode.children[i]\n            node.active = true\n            let finalSpriteName = this.getSpriteNameFunc(content.substr(i, 1))\n            Extension.DirGetAbSprite(node.getComponent(cc.Sprite), this.atlas, finalSpriteName, fAllOk)\n        }\n\n    }\n\n    public Clear(){\n        for (let val of this.tarNode.children) {\n            val.active = false\n        }\n    }\n\n\n}"]}