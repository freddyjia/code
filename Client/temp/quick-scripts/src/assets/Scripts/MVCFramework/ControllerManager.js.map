{"version":3,"sources":["assets\\Scripts\\MVCFramework\\ControllerManager.ts"],"names":[],"mappings":";;;;;;AACA,sDAAqD;AACrD,iDAA4C;AAC5C,6CAAwC;AACxC,+CAA0C;AAE1C;IAAA;IAqDA,CAAC;IAhDiB,kCAAgB,GAA9B,UAA+B,cAAqB,EAAC,GAAU,EAAC,OAAW;QAEvE,IAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,IAAI,EAC9C;YACI,IAAI,UAAU,GAAc,yBAAW,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE,CAAC;YACzE,UAAU,CAAC,IAAI,GAAG,cAAc,CAAC;YACjC,UAAU,CAAC,eAAe,GAAG,UAAC,GAAG,EAAC,OAAO;gBACrC,uBAAa,CAAC,WAAW,CAAC,GAAG,EAAC,OAAO,CAAC,CAAC;YAC3C,CAAC,CAAC;YAEF,UAAU,CAAC,eAAe,GAAG,UAAC,QAAQ;gBAClC,OAAO,qBAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACzC,CAAC,CAAC;YAEF,UAAU,CAAC,gBAAgB,GAAG,UAAC,SAAS;gBACpC,OAAO,sBAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;YAC5C,CAAC,CAAC;YAEF,UAAU,CAAC,IAAI,EAAE,CAAC;YAElB,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,GAAG,UAAU,CAAC;SACpD;QACD,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC,gBAAgB,CAAC,GAAG,EAAC,OAAO,CAAC,CAAC;IACtE,CAAC;IAEa,uBAAK,GAAnB;QAEI,KAAI,IAAI,cAAc,IAAI,IAAI,CAAC,cAAc,EAC7C;YACI,IAAG,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,IAAI,IAAI,EAClD;gBACI,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC,KAAK,EAAE,CAAC;aAC/C;SACJ;QAED,IAAI,eAAe,GAAwC,EAAE,CAAC;QAC9D,KAAI,IAAI,cAAc,IAAI,IAAI,CAAC,cAAc,EAC7C;YACI,IAAG,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,IAAI,IAAI,EAClD;gBACI,eAAe,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;aACzE;SACJ;QAED,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAE3B,IAAI,CAAC,cAAc,GAAG,eAAe,CAAC;IAC1C,CAAC;IAlDc,oCAAkB,GAAG,CAAC,iBAAiB,EAAC,kBAAkB,EAAC,qBAAqB,EAAC,sBAAsB,CAAC,CAAC;IACzG,gCAAc,GAAwC,EAAE,CAAC;IAkD5E,wBAAC;CArDD,AAqDC,IAAA;kBArDoB,iBAAiB","file":"","sourceRoot":"/","sourcesContent":["import Controller from \"./Controller\";\nimport { MVCRegister } from \"../Modules/MVCRegister\";\nimport MessageCenter from \"./MessageCenter\";\nimport ViewManager from \"./ViewManager\";\nimport ModelManager from \"./ModelManager\";\n\nexport default class ControllerManager\n{\n    private static unClearControllers = [\"ControllerToast\",\"ControllerDialog\",\"ControllerDialogTip\",\"ControllerScreenMask\"];\n    private static dicControllers:{[controllerName:string]:Controller} = {};\n\n    public static OnReceiveMessage(controllerName:string,msg:string,msgBody:any)\n    {\n        if(this.dicControllers[controllerName] == null)\n        {\n            let controller:Controller = MVCRegister.dicControllers[controllerName]();\n            controller.name = controllerName;\n            controller.sendMsgCallBack = (msg,msgBody)=>{\n                MessageCenter.SendMessage(msg,msgBody);\n            };\n\n            controller.getViewCallback = (viewName)=>{\n                return ViewManager.GetView(viewName);\n            };\n\n            controller.getModelCallback = (modelName)=>{\n                return ModelManager.GetModel(modelName);\n            };\n\n            controller.Init();\n\n            this.dicControllers[controllerName] = controller;\n        }\n        this.dicControllers[controllerName].OnReceiveMessage(msg,msgBody);\n    }\n\n    public static Clean()\n    {\n        for(let controllerName in this.dicControllers)\n        {\n            if(this.unClearControllers[controllerName] == null)\n            {\n                this.dicControllers[controllerName].Clean();\n            }\n        }\n\n        let controllerCache:{[controllerName:string]:Controller} = {};\n        for(let controllerName in this.dicControllers)\n        {\n            if(this.unClearControllers[controllerName] != null)\n            {\n                controllerCache[controllerName] = this.dicControllers[controllerName];\n            }\n        }\n\n        this.dicControllers = null;\n\n        this.dicControllers = controllerCache;\n    }\n}\n"]}