{"version":3,"sources":["assets\\Scripts\\Network\\Socket\\DataPacket.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["export class Package\n{\n    public msgID:number;\n    // public length:number;\n    public seq:number;\n    public data:Uint8Array;\n    // public dataRest:Uint8Array;\n}\n\nexport default class DataPacket\n{\n    public static Packet(id:number,seq:number,data:Uint8Array):Uint8Array\n    {\n        if(data == null)\n        {\n            data = new Uint8Array(0);\n        }\n        \n        let lengthData = data.length;\n        let length = lengthData + 18;\n        let finalData = new Uint8Array(length);\n        let msgType:number;\n        if(id == 0 || id == 1)\n        {\n            msgType = 0;\n        }\n        else\n        {\n            msgType = 1;\n        }\n\n        let id1 = id & 255;\n        let id2 = (id>>8) & 255;\n        let id3 = (id>>16) & 255;\n        let id4 = (id>>24) & 255;\n\n        let seq1 = seq & 255;\n        let seq2 = (seq>>8) & 255;\n        let seq3 = (seq>>16) & 255;\n        let seq4 = (seq>>24) & 255;\n\n        let length1 = length & 255;\n        let length2 = (length>>8) & 255;\n        let length3 = (length>>16) & 255;\n        let length4 = (length>>24) & 255;\n\n        let lengthData1 = lengthData & 255;\n        let lengthData2 = (lengthData>>8) & 255;\n        let lengthData3 = (lengthData>>16) & 255;\n        let lengthData4 = (lengthData>>24) & 255;\n\n        let platform = 0;\n\n        finalData[0] = length4;\n        finalData[1] = length3;\n        finalData[2] = length2;\n        finalData[3] = length1;\n        finalData[4] = msgType;\n        finalData[5] = platform;\n        finalData[6] = seq4;\n        finalData[7] = seq3;\n        finalData[8] = seq2;\n        finalData[9] = seq1;\n        finalData[10] = id4;\n        finalData[11] = id3;\n        finalData[12] = id2;\n        finalData[13] = id1;\n        finalData[14] = lengthData4;\n        finalData[15] = lengthData3;\n        finalData[16] = lengthData2;\n        finalData[17] = lengthData1;\n        finalData.set(data,18);\n\n        return finalData;\n    }\n\n    public static TryUnpacket(data:Uint8Array):boolean\n    {\n        if(data.length < 4)\n        {\n            return false;\n        }\n        let length = data[0]<<24 | data[1]<<16 | data[2]<<8 | data[3];\n        if(data.length < length)\n        {\n            return false;\n        }\n        return true;\n    }\n\n    public static UnPacket(data:Uint8Array,packageArray:Array<Package>):Uint8Array\n    {\n        if(this.TryUnpacket(data) == false)\n        {\n            return data;\n        }\n        let length = data[0]<<24 | data[1]<<16 | data[2]<<8 | data[3];\n        let msgType = data[4];\n        let platform = data[5];\n        let seq = data[6]<<24 | data[7]<<16 | data[8]<<8 | data[9];\n        let msgID = data[10]<<24 | data[11]<<16 | data[12]<<8 | data[13];\n        let lengthData = data[14]<<24 | data[15]<<16 | data[16]<<8 | data[17];\n        \n        // cc.error(\"UnPacket data \" + data);\n        // cc.error(\"UnPacket seq \" + seq + \" length \" + length + \" msgID \" + msgID);\n        let pack:Package = new Package();\n        pack.data = data.subarray(18,18 + lengthData);\n        // pack.length = length;\n        pack.msgID = msgID;\n        pack.seq = seq;\n        packageArray.push(pack);\n\n        if(data.length > length)\n        {\n            data = data.subarray(length,data.length - 1);\n            return this.UnPacket(data,packageArray);\n        }\n        return new Uint8Array(0);\n    }\n\n}\n"]}